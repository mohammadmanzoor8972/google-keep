{"version":3,"sources":["utils/constants.js","contexts/ThemeContext.js","components/SearchBox.js","containers/FilterContainer.js","actions/filterAction.js","components/Header.js","components/NavBar.js","components/ColorPicker.js","components/Note.js","components/Notes.js","apiCaller/index.js","actions/noteAction.js","containers/NotesContainer.js","containers/ArchivedNotesContainer.js","components/NewNote.js","components/MainDisplay.js","containers/MainDisplayContainer.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/noteReducer.js","reducers/filterReducer.js","store/initialState.js","store/index.js","index.js"],"names":["DEFAULT_STATE","title","body","image","backgroundColor","isArchived","isStarred","DARK_THEME","LIGHT_COLORS","DARK_COLORS","ThemeContext","React","createContext","theme","toggleTheme","SearchBox","updateFilter","value","searchInput","useRef","useState","filterValue","setFilterValue","handleFilterChange","e","currentTarget","useEffect","localforage","getItem","then","res","setItem","Consumer","className","onClick","current","focus","ref","placeholder","type","onChange","FilterContainer","style","width","this","props","Component","connect","notes","filter","note","toLowerCase","includes","noteTitleFilter","dispatch","text","Header","setNavbarCollapse","MAIN_LIST","icon","NavBar","isNavbarCollapased","selctedIndex","setSelectedIndex","renderListItem","map","index","key","height","ColorPicker","colors","selectedIndex","handleBackgroundColor","setColorPickerVisibility","position","onMouseEnter","onMouseLeave","color","opacity","stopPropagation","alignSelf","Note","onRemove","onArchive","onStar","onUpdate","setModalVisibility","setSelectedNote","dimensions","colorIndex","indexOf","showActions","setShowActions","colorPickerVisibility","noteRef","gridRowEnd","setGridRowEnd","rowSpan","Math","ceil","querySelector","getBoundingClientRect","rowGap","rowHeight","onNoteSelect","handleArchive","handleRemove","handleStar","updatedNote","onMouseOver","alt","src","onMouseOut","Notes","selectedNote","modalVisibility","tagVisibility","setTagVisibility","setDimensions","contentInput","gridNote","autosize","resizeGridItem","item","length","parseInt","window","getComputedStyle","getPropertyValue","onNoteChange","name","marginBottom","id","marginTop","rows","getAll","a","async","newNote","Date","now","addNewNote","API","updateNote","getState","starNote","toggleNote","removeNote","NotesContainer","NewNote","isFocussed","setFocus","noteState","setNoteState","onSave","imageInputVisibility","setImageInputVisibility","handleChange","target","handleAttachPicture","handleClearImage","display","flex","MainDisplay","ArchivedNotesContainer","renderContainer","MainDisplayContainer","bindActionCreators","App","setState","innerWidth","state","Provider","Boolean","location","hostname","match","combineReducers","action","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","initialState","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"icAaaA,G,MAAgB,CAC3BC,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,gBAAiB,GACjBC,YAAY,EACZC,WAAW,IAIAC,EAAa,aAIbC,EAAe,CAC1B,UACA,UACA,UACA,UACA,UACA,WAGWC,EAAc,CACzB,UACA,UACA,UACA,UACA,UACA,WClCaC,EALMC,IAAMC,cAAc,CACvCC,MDkByB,cCjBzBC,YAAa,eC0EAC,EAzEG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MAC3BC,EAAcC,iBAAO,MADkB,EAEPC,mBAASH,GAFF,mBAEtCI,EAFsC,KAEzBC,EAFyB,KAIvCC,EAAqB,SAAAC,GACzBF,EAAeE,EAAEC,cAAcR,QAiBjC,OAdAS,qBAAU,WACRC,IAAYC,QAAQ,SAAUP,GAAaQ,MAAK,SAAAC,GAC1CA,IACFR,EAAeQ,GACfd,EAAac,SAGhB,IAEHJ,qBAAU,WACRV,EAAaK,GACbM,IAAYI,QAAQ,SAAUV,KAC7B,CAACA,EAAaL,IAGf,kBAAC,EAAagB,SAAd,MACG,gBAAGnB,EAAH,EAAGA,MAAH,OACC,yBACEoB,UACEpB,IAAUN,EACN,yCACA,2CAGN,uBACE0B,UACEpB,IAAUN,EACN,kCACA,6CAEN2B,QAAS,kBAAMhB,EAAYiB,QAAQC,UANrC,UAUA,2BACEC,IAAKnB,EACLoB,YAAY,SACZL,UACEpB,IAAUN,EACN,eACA,kCAENgC,KAAK,OACLC,SAAUjB,EACVN,MAAOI,IAET,uBACEY,UACEpB,IAAUN,EACN,kCACA,6CAEN2B,QAAS,WACPlB,EAAa,IACbM,EAAe,MARnB,cCtDJmB,E,iLAEF,OACE,yBAAKC,MAAO,CAAEC,MAAO,QACnB,kBAAC,EAAcC,KAAKC,Y,GAJEC,aA2BfC,eAjBS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAChC,MAAO,CACLD,MAAOA,EAAMC,QACX,SAAAC,GAAI,OACFA,EAAKjD,MAAMkD,cAAcC,SAASH,EAAOI,kBACzCH,EAAKhD,KAAKiD,cAAcC,SAASH,EAAOI,oBAE5CpC,MAAOgC,EAAOI,oBAIS,SAAAC,GAAQ,MAAK,CACtCtC,aADsC,SACzBC,GACXqC,EC3B0C,CAC5Cf,KJHsC,2BIItCgB,KDyBiCtC,QAIpB8B,CAA6CN,GEM7Ce,MAjCf,YAAwC,IAAtBC,EAAqB,EAArBA,kBAChB,OACE,kBAAC,EAAazB,SAAd,MACG,gBAAGlB,EAAH,EAAGA,YAAaD,EAAhB,EAAgBA,MAAhB,OACC,4BAAQoB,UAAU,UAChB,yBAAKA,UAAU,eACb,yBACEA,UAAWpB,IAAUN,EAAa,OAAS,kBAC3C2B,QAASuB,GAET,uBAAGxB,UAAU,4BAAb,SAEF,yBAAKA,UAAU,cAAf,gBAEF,yBAAKA,UAAU,cACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,eACb,yBACEA,UAAWpB,IAAUN,EAAa,OAAS,kBAC3C2B,QAASpB,GAET,uBAAGmB,UAAU,4BACVpB,IAAUN,EAAa,WAAa,uBCzB/CmD,G,MAAY,CAChB,CACEzD,MAAO,QACP0D,KAAM,QAER,CACE1D,MAAO,UACP0D,KAAM,aA4CKC,EAxCA,SAAC,GAKT,IAJLC,EAII,EAJJA,mBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,iBACAlD,EACI,EADJA,MAEMmD,EAAiBN,EAAUO,KAAI,WAAkBC,GAAW,IAA1BP,EAAyB,EAAzBA,KAAM1D,EAAmB,EAAnBA,MAC5C,OACE,yBACEkE,IAAKlE,EACLgC,UACE6B,IAAiBI,EAAQ,6BAA+B,YAE1DhC,QAAS,kBAAM6B,EAAiBG,KAEhC,uBAAGjC,UAAU,4BAA4B0B,GACzC,yBAAK1B,UAAU,cAAchC,OAK/BgC,EAAY,GAWhB,OATEA,EADE4B,EACU,uBAEA,SNlBW,gBMqBrBhD,IACFoB,GAAa,iBAIb,yBAAKA,UAAWA,GACb+B,EACD,yBAAKtB,MAAO,CAAEtC,gBAAiB,OAAQgE,OAAQ,W,gDCPtCC,G,YAxCK,SAAC,GAMd,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,sBACAC,EAEI,EAFJA,yBACAC,EACI,EADJA,SAEA,OACE,yBACEzC,UAAU,kBACVS,MAAK,eACFgC,EAASP,IAAMO,EAASzD,OAE3B0D,aAAc,kBAAMF,GAAyB,IAC7CG,aAAc,kBAAMH,GAAyB,KAE5CH,EAAOL,KAAI,SAACY,EAAOX,GAAR,OACV,yBACEC,IAAKU,EACL5C,UAAU,QACVS,MAAO,CACLtC,gBAAgB,GAAD,OAAKyE,GACpBC,QAASZ,IAAUK,EAAgB,GAAM,GAE3CrC,QAAS,SAAAV,GACPA,EAAEuD,kBACFP,EAAsBN,EAAOW,KAG9BX,IAAUK,GACT,uBAAG7B,MAAO,CAAEsC,UAAW,UAAY/C,UAAU,kBAA7C,gBC2JGgD,EAjLF,SAAC,GASP,IARL/B,EAQI,EARJA,KACAgC,EAOI,EAPJA,SACAC,EAMI,EANJA,UACAC,EAKI,EALJA,OACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,WAEMC,EAAahF,EAAYiF,QAAQxC,EAAK9C,iBADxC,EAEkCgB,oBAAS,GAF3C,mBAEGuE,EAFH,KAEgBC,EAFhB,OAGsDxE,oBAAS,GAH/D,mBAGGyE,EAHH,KAG0BpB,EAH1B,OAIsCrD,oBACxB,IAAhBqE,EAAoB,EAAIA,GALtB,mBAIGlB,EAJH,KAIkBR,EAJlB,KAOE+B,EAAU3E,iBAAO,MAPnB,EAQgCC,mBAAS,GARzC,mBAQG2E,EARH,KAQeC,EARf,KAUJtE,qBAAU,WACR,IAAIuE,EAAUC,KAAKC,MAChBL,EAAQ3D,QAAQiE,cAAc,eAAeC,wBAC3CjC,OACDoB,EAAWc,SACVd,EAAWe,UAAYf,EAAWc,SAEvCN,EAAcC,KACb,CAACT,IAEJ,IAAMgB,EAAe,SAAAhF,GACnBA,EAAEuD,kBACFO,GAAmB,GACnBC,EAAgBrC,IAGZuD,EAAgB,SAAAjF,GACpBA,EAAEuD,kBACFI,EAAUjC,IAGNwD,EAAe,SAAAlF,GACnBA,EAAEuD,kBACFG,EAAShC,IAGLyD,EAAa,SAAAnF,GACjBA,EAAEuD,kBACFK,EAAOlC,IAGHsB,EAAwB,SAACN,EAAOW,GACpCd,EAAiBG,GACjB,IAAI0C,EAAW,eACV1D,EADU,CAEb9C,gBAAiByE,IAEnBQ,EAASuB,IAGX,OACE,kBAAC,EAAa5E,SAAd,MACG,gBAAGnB,EAAH,EAAGA,MAAH,OACC,yBAAKwB,IAAKyD,EAASpD,MAAO,CAAEqD,WAAW,QAAD,OAAUA,KAC9C,yBACE9D,UAAU,aACV4E,YAAa,kBAAMjB,GAAe,IAClCjB,aAAc,kBAAMiB,GAAe,IACnChB,aAAc,kBAAMgB,GAAe,IACnC1D,QAASsE,EACT9D,MAAO,CACLgC,SAAU,WACVtE,gBAAgB,GAAD,OAAK8C,EAAK9C,iBACzByE,MR7Da,gBQ8DXhE,GAAkD,KAAzBqC,EAAK9C,gBAC1B,UACA,YAGPyF,GACC,kBAAC,EAAD,CACEvB,OAAQzD,IAAUN,EAAaE,EAAcD,EAC7C+D,cAAeA,EACfC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,SAAU,CAAEP,IAAK,QAASlD,MAAO,UAGpC0E,GACC,yBACE1D,UACEpB,IAAUN,EACN,wBACA,mCAEN2B,QAASyE,GAET,uBAAG1E,UAAU,wBACViB,EAAK5C,UAAY,OAAS,gBAIjC,yBAAK2B,UAAU,cAAciB,EAAKjD,OAClC,yBAAKgC,UAAU,gBAAgBiB,EAAKhD,MACpB,KAAfgD,EAAK/C,OACJ,yBAAK8B,UAAU,wBACb,yBACEA,UAAU,aACV6E,IAAI,kBACJC,IAAK7D,EAAK/C,SAIhB,yBAAK8B,UAAU,gBACZ0D,GACC,yBACE1D,UACEpB,IAAUN,EACN,mBACA,8BAEN2B,QAASuE,GAET,uBACExE,UACEiB,EAAK7C,WACD,uBACA,kCAJR,YAWHsF,GACC,yBACE1D,UACEpB,IAAUN,EACN,mBACA,+BAGN,uBAAG0B,UAAU,wBAAb,wBAGH0D,GACC,yBACE1D,UACEpB,IAAUN,EACN,mBACA,8BAENsG,YAAa,kBAAMpC,GAAyB,IAC5CuC,WAAY,kBAAMvC,GAAyB,KAE3C,uBAAGxC,UAAU,wBAAb,eAGH0D,GACC,yBACE1D,UACEpB,IAAUN,EACN,mBACA,8BAEN2B,QAASwE,GAET,uBAAGzE,UAAU,wBAAb,kBCSHgF,EAnLD,SAAC,GAAsD,IAApDjE,EAAmD,EAAnDA,MAAOkC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,SAAUD,EAAa,EAAbA,OAAa,EAC1BhE,mBAASpB,GADiB,mBAC3DkH,EAD2D,KAC7C3B,EAD6C,OAEpBnE,oBAAS,GAFW,mBAE3D+F,EAF2D,KAE1C7B,EAF0C,OAGxBlE,oBAAS,GAHe,mBAG3DgG,EAH2D,KAG5CC,EAH4C,OAI9BjG,mBAAS,CAAEmF,UAAW,EAAGD,OAAQ,IAJH,mBAI3Dd,EAJ2D,KAI/C8B,EAJ+C,KAK5DC,EAAepG,iBAAO,MACtBqG,EAAWrG,iBAAO,MAExBO,qBAAU,WACR6F,EAAapF,QAAQC,QACrBqF,IAASF,EAAapF,SACtBR,IAAYC,QAAQ,iBAAiBC,MAAK,SAAAC,GACpCA,GAAOA,EAAIqF,iBAAmBrF,EAAIoF,eACpC5B,GAAmB,GACnBC,EAAgBzD,EAAIoF,kBAGxBQ,MACC,IAEHhG,qBAAU,WACRC,IAAYI,QAAQ,gBAAiB,CAAEoF,kBAAiBD,mBACvD,CAACC,EAAiBD,IAErBxF,qBAAU,WAENsB,EAAMC,QAAO,SAAA0E,GAAI,OAAIA,EAAKrH,aAAWsH,OAAS,GAC9C5E,EAAMC,QAAO,SAAA0E,GAAI,OAAKA,EAAKrH,aAAWsH,OAAS,EAE/CP,GAAiB,GAEjBA,GAAiB,KAElB,CAACrE,IAEJ,IAAM0E,EAAiB,WACrB,IAAMnB,EAAYsB,SAChBC,OACGC,iBAAiBP,EAASrF,SAC1B6F,iBAAiB,mBAEhB1B,EAASuB,SACbC,OAAOC,iBAAiBP,EAASrF,SAAS6F,iBAAiB,iBAE7DV,EAAc,CAAEhB,SAAQC,eAGpB0B,EAAe,SAAAzG,GACnB,IAAI0B,EAAI,eACHgE,EADG,eAEL1F,EAAEC,cAAcyG,KAAO1G,EAAEC,cAAcR,QAE1CsE,EAAgBrC,GAChBmC,EAASnC,IAGX,OACE,kBAAC,EAAalB,SAAd,MACG,gBAAGnB,EAAH,EAAGA,MAAH,OACC,6BACGuG,GACC,yBAAK1E,MAAO,CAAEyF,aAAc,OAASlG,UAAU,YAA/C,WAIF,yBAAKA,UAAU,cACZe,EACEC,QAAO,SAAA0E,GAAI,OAAIA,EAAKrH,aACpB2D,KAAI,SAAA0D,GACH,OACE,kBAAC,EAAD,CACEnC,WAAYA,EACZrB,IAAKwD,EAAKS,GACVlF,KAAMyE,EACNzC,SAAUA,EACVC,UAAWA,EACXC,OAAQA,EACRC,SAAUA,EACVC,mBAAoBA,EACpBC,gBAAiBA,OAIxB4B,GAEFC,GACC,yBACE1E,MAAO,CAAE2F,UAAW,OAAQF,aAAc,OAC1ClG,UAAU,YAFZ,UAOF,yBAAKI,IAAKmF,EAAUvF,UAAU,cAC3Be,EACEC,QAAO,SAAA0E,GAAI,OAAKA,EAAKrH,aACrB2D,KAAI,SAAA0D,GACH,OACE,kBAAC,EAAD,CACEnC,WAAYA,EACZrB,IAAKwD,EAAKS,GACVlF,KAAMyE,EACNzC,SAAUA,EACVC,UAAWA,EACXC,OAAQA,EACRC,SAAUA,EACVC,mBAAoBA,EACpBC,gBAAiBA,OAIxB4B,GAEH,yBAAKlF,UAAWkF,EAAkB,gBAAkB,UAClD,yBACElF,UACEpB,IAAUN,EACN,eACA,mCAGN,yBAAK0B,UAAU,iBACb,2BACEO,SAAUyF,EACVhH,MAAOiG,EAAajH,MACpBgC,UACEpB,IAAUN,EACN,mBACA,0CAENgC,KAAK,OACL2F,KAAK,QACL5F,YAAY,UAEd,8BACEE,SAAUyF,EACVhH,MAAOiG,EAAahH,KACpBgI,KAAK,OACL7F,IAAKkF,EACLe,KAAM,EACNrG,UACEpB,IAAUN,EACN,qBACA,8CAENgC,KAAK,OACLD,YAAY,mBAEd,2BACEE,SAAUyF,EACVhH,MAAOiG,EAAa/G,MACpB8B,UACEpB,IAAUN,EACN,mBACA,0CAENgC,KAAK,OACL2F,KAAK,QACL5F,YAAY,8BAEd,4BACEL,UACEpB,IAAUN,EACN,qBACA,oCAEN2B,QAAS,kBAAMoD,GAAmB,KANpC,iB,wBCrKhBwC,OAAOnG,YAAcA,IAErB,IAAM4G,EAAS,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACO7G,IAAYC,QAAQ,UAD3B,UACPoB,EADO,yCAAAwF,EAAA,MAEK7G,IAAYI,QAAQ,QAAS,KAFlC,gCAGNiB,GAAS,IAHH,sCAMA,WACHE,GADG,oGAESqF,KAFT,cAELvF,EAFK,OAGL0F,EAHK,eAGUxF,EAHV,CAGgBkF,GAAIO,KAAKC,QACpCjH,IAAYI,QAAQ,QAApB,sBAAiCiB,GAAjC,CAAwC0F,KAJ7B,kBAKJA,GALI,+IASEH,KATF,6KAYEH,EAZF,EAYEA,GAZF,mBAaSG,KAbT,OAaLvF,EAbK,OAcXrB,IAAYI,QACV,QACAiB,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKkF,KAAOA,MAhBxB,iDAoBAxB,GApBA,kGAqBS2B,KArBT,OAqBLvF,EArBK,OAsBXrB,IAAYI,QACV,QACAiB,EAAMiB,KAAI,SAAAf,GACR,OAAIA,EAAKkF,KAAOxB,EAAYwB,GAAW,eAAKlF,EAAZ,GAAqB0D,GAC9C1D,MA1BA,sCCYF2F,EAAa,SACxB5I,EACAC,GAKI,IAJJC,EAIG,uDAJK,GACRC,EAGG,uDAHe,GAClBE,EAEG,wDADHD,EACG,wDACG6C,EAAO,CACX5C,YACAD,aACAJ,QACAC,OACAC,QACAC,mBAGF,OAAO,SAAAkD,GACLwF,EAAQ5F,GAAMrB,MAAK,SAAAqB,GACjBI,EAAS,CACPf,KXtCoB,eWuCpBW,cAMK6F,EAAa,SAAA7F,GACxB,OAAO,SAACI,EAAU0F,GAChBF,EAAW5F,GAAMrB,MAAK,WACpByB,EAAS,CACPf,KXhDmB,cWiDnBW,cAMK+F,EAAW,SAAA/F,GACtB,IAAM0D,EAAW,eAAQ1D,EAAR,CAAc5C,WAAY4C,EAAK5C,YAChD,OAAO,SAACgD,EAAU0F,GAChBF,EAAWlC,GAAa/E,MAAK,WAC3ByB,EAAS,CACPf,KX1DmB,cW2DnBW,KAAM0D,SAMDsC,EAAa,SAAAhG,GACxB,IAAM0D,EAAW,eAAQ1D,EAAR,CAAc7C,YAAa6C,EAAK7C,aACjD,OAAO,SAACiD,EAAU0F,GAChBF,EAAWlC,GAAa/E,MAAK,WAC3ByB,EAAS,CACPf,KXtEmB,cWuEnBW,KAAM0D,SAMDuC,EAAa,SAAAjG,GACxB,OAAO,SAAAI,GACLwF,EAAW5F,GAAMrB,MAAK,WACpByB,EAAS,CACPf,KXlFmB,cWmFnB6F,GAAIlF,EAAKkF,UC9EXgB,E,iLACM,IAAD,EACkDxG,KAAKC,MAAtDG,EADD,EACCA,MAAOkC,EADR,EACQA,SAAUC,EADlB,EACkBA,UAAWE,EAD7B,EAC6BA,SAAUD,EADvC,EACuCA,OAC9C,OACE,kBAAC,EAAD,CACEpC,MAAOA,EACPkC,SAAUA,EACVC,UAAWA,EACXE,SAAUA,EACVD,OAAQA,Q,GATatC,aA6CdC,eA9BS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAChC,MAAO,CACLD,MAAOA,EAAMC,QACX,SAAAC,GAAI,OACDA,EAAK7C,aACL6C,EAAKjD,MACHkD,cACAC,SAASH,EAAOI,gBAAgBF,gBACjCD,EAAKhD,KACFiD,cACAC,SAASH,EAAOI,gBAAgBF,uBAKlB,SAAAG,GAAQ,MAAK,CACtC6B,UADsC,SAC5BjC,GACRI,EAAS4F,EAAWhG,KAEtBgC,SAJsC,SAI7BhC,GACPI,EAAS6F,EAAWjG,KAEtBmC,SAPsC,SAO7BnC,GACPI,EAASyF,EAAW7F,KAEtBkC,OAVsC,SAU/BlC,GACLI,EAAS2F,EAAS/F,QAIPH,CAA6CqG,GC7CtDA,E,iLACM,IAAD,EACkDxG,KAAKC,MAAtDG,EADD,EACCA,MAAOkC,EADR,EACQA,SAAUC,EADlB,EACkBA,UAAWE,EAD7B,EAC6BA,SAAUD,EADvC,EACuCA,OAC9C,OACE,kBAAC,EAAD,CACEpC,MAAOA,EACPkC,SAAUA,EACVC,UAAWA,EACXE,SAAUA,EACVD,OAAQA,Q,GATatC,aA6CdC,eA9BS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAChC,MAAO,CACLD,MAAOA,EAAMC,QACX,SAAAC,GAAI,OACFA,EAAK7C,aACJ6C,EAAKjD,MACHkD,cACAC,SAASH,EAAOI,gBAAgBF,gBACjCD,EAAKhD,KACFiD,cACAC,SAASH,EAAOI,gBAAgBF,uBAKlB,SAAAG,GAAQ,MAAK,CACtC6B,UADsC,SAC5BjC,GACRI,EAAS4F,EAAWhG,KAEtBgC,SAJsC,SAI7BhC,GACPI,EAAS6F,EAAWjG,KAEtBmC,SAPsC,SAO7BnC,GACPI,EAASyF,EAAW7F,KAEtBkC,OAVsC,SAU/BlC,GACLI,EAAS2F,EAAS/F,QAIPH,CAA6CqG,GCgN7CC,EA7PC,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAC1DnC,EAAepG,iBAAO,MADiD,EAEnCC,mBAAS,GAF0B,mBAEtEmD,EAFsE,KAEvDR,EAFuD,OAGnB3C,oBAAS,GAHU,mBAGtEyE,EAHsE,KAG/CpB,EAH+C,OAIrBrD,oBAAS,GAJY,mBAItEuI,EAJsE,KAIhDC,EAJgD,KAM7ElI,qBAAU,WACJ6F,GAAgBA,EAAapF,UAC/BoF,EAAapF,QAAQC,QACrBqF,IAASF,EAAapF,YAEvB,IAEH,IAAM0H,EAAe,SAAArI,GACnBiI,EAAa,eACRD,EADO,eAEThI,EAAEsI,OAAO5B,KAAO1G,EAAEsI,OAAO7I,UAIxB0F,EAAa,WACjB8C,GAAa,SAAAD,GACX,OAAO,eACFA,EADL,CAEElJ,WAAYkJ,EAAUlJ,gBAKtBmG,EAAgB,WACpBgD,GAAa,SAAAD,GACX,OAAO,eACFA,EADL,CAEEnJ,YAAamJ,EAAUnJ,iBAKvBmE,EAAwB,SAACN,EAAOW,GACpCd,EAAiBG,GACjBuF,GAAa,SAAAD,GACX,OAAO,eACFA,EADL,CAEEpJ,gBAAiByE,QAKjBkF,EAAsB,WAC1BH,GAAwB,SAAAD,GAAoB,OAAKA,MAG7CK,EAAmB,WACvBJ,GAAwB,GACxBH,GAAa,SAAAD,GACX,OAAO,eACFA,EADL,CAEErJ,MAAO,SAKb,OAAImJ,EAEA,kBAAC,EAAatH,SAAd,MACG,gBAAGnB,EAAH,EAAGA,MAAH,OACC,yBACEoB,UAAU,WACVS,MAAO,CACLgC,SAAU,WACVtE,gBACE,UAAAS,IAAUN,EACHE,EAAY8D,GACZ/D,EAAa+D,KAExBrC,QAAS,SAAAV,GAAC,OAAIA,EAAEuD,oBAEfc,GACC,kBAAC,EAAD,CACEvB,OAAQzD,IAAUN,EAAaE,EAAcD,EAC7C+D,cAAeA,EACfC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,SAAU,CAAEP,IAAK,OAAQlD,MAAO,UAGpC,yBACEgB,Ud5Ea,gBc6EXpB,GAA2C,IAAlB0D,EACrB,4BACA,qCAENrC,QAASyE,GAET,uBAAG1E,UAAU,kBACVuH,EAAUlJ,UAAY,OAAS,gBAGpC,2BACEkC,SAAUqH,EACV5I,MAAOuI,EAAUvJ,MACjBgC,Ud1Fa,gBc2FXpB,GAA2C,IAAlB0D,EACrB,0CACA,mBAENhC,KAAK,OACL2F,KAAK,QACL5F,YAAY,UAEd,8BACEE,SAAUqH,EACV5I,MAAOuI,EAAUtJ,KACjBgI,KAAK,OACL7F,IAAKkF,EACLe,KAAM,EACNrG,UdzGa,gBc0GXpB,GAA2C,IAAlB0D,EACrB,8CACA,qBAENhC,KAAK,OACLD,YAAY,mBAEbqH,GACC,2BACEnH,SAAUqH,EACV5I,MAAOuI,EAAUrJ,MACjB8B,UdrHW,gBcsHTpB,GAA2C,IAAlB0D,EACrB,0CACA,mBAENhC,KAAK,OACL2F,KAAK,QACL5F,YAAY,8BAGK,KAApBkH,EAAUrJ,OACT,yBAAK8B,UAAU,wBACb,yBACEA,UACEpB,IAAUN,EACN,yBACA,oCAEN2B,QAAS8H,GAET,uBAAG/H,UAAU,kBAAb,UAEF,yBACEA,UAAU,aACV6E,IAAI,kBACJC,IAAKyC,EAAUrJ,SAIrB,yBAAK8B,UAAU,oBACb,yBAAKS,MAAO,CAAEuH,QAAS,SACrB,yBACEhI,UdrJS,gBcsJPpB,GAA2C,IAAlB0D,EACrB,mBACA,2BAENrC,QAASuE,GAET,uBACExE,UACEuH,EAAUnJ,WACN,iBACA,2BAJR,YAUF,yBACE4B,UdvKS,gBcwKPpB,GAA2C,IAAlB0D,EACrB,mBACA,2BAENrC,QAAS6H,GAET,uBACE9H,UACEuH,EAAUnJ,WACN,iBACA,2BAJR,wBAUF,yBACE4B,UdzLS,gBc0LPpB,GAA2C,IAAlB0D,EACrB,mBACA,2BAENsC,YAAa,kBAAMpC,GAAyB,IAC5CuC,WAAY,kBAAMvC,GAAyB,KAE3C,uBAAGxC,UAAU,kBAAb,gBAGJ,yBAAKS,MAAO,CAAEuH,QAAS,SACrB,4BACEhI,UdtMS,gBcuMPpB,GAA2C,IAAlB0D,EACrB,0BACA,WAENrC,QAAS,WACPwH,IACA3F,EAAiB,KARrB,eAqBV,kBAAC,EAAa/B,SAAd,MACG,gBAAGnB,EAAH,EAAGA,MAAH,OACC,yBACE6B,MAAO,CAAEuH,QAAS,QAClBhI,UAAU,WACVC,QAAS,SAAAV,GAAC,OAAIA,EAAEuD,oBAEhB,yBAAK9C,UAAU,sBAAsBC,QAAS,kBAAMqH,GAAS,KAA7D,eAGA,yBAAK7G,MAAO,CAAEwH,KAAM,IAAKD,QAAS,SAChC,yBACEhI,UAAWpB,IAAUN,EAAa,OAAS,mBAE3C,uBAAG0B,UAAU,kBAAb,8BCtMDkI,EAjDK,SAAC,GAAkC,IAAhCrG,EAA+B,EAA/BA,aAAc+E,EAAiB,EAAjBA,WAAiB,EACrBzH,oBAAS,GADY,mBAC7CkI,EAD6C,KACjCC,EADiC,OAElBnI,mBAASpB,GAFS,mBAE7CwJ,EAF6C,KAElCC,EAFkC,KAI9CC,EAAS,WAAO,IAElBzJ,EAMEuJ,EANFvJ,MACAC,EAKEsJ,EALFtJ,KACAI,EAIEkJ,EAJFlJ,UACAD,EAGEmJ,EAHFnJ,WACAD,EAEEoJ,EAFFpJ,gBACAD,EACEqJ,EADFrJ,MAEY,KAAVF,GAAyB,KAATC,IAClB2I,EAAW5I,EAAOC,EAAMC,EAAOC,EAAiBE,EAAWD,GAC3DoJ,EAAazJ,IAEfuJ,GAAS,IAcX,OACE,0BAAMtH,UAAU,OAAOC,QAASwH,GACZ,IAAjB5F,GACC,yBAAK7B,UAAU,sBACb,kBAAC,EAAD,CACEqH,WAAYA,EACZC,SAAUA,EACVC,UAAWA,EACXC,aAAcA,EACdC,OAAQA,KAId,yBAAKzH,UAAU,mBAxBK,WACtB,OAAQ6B,GACN,KAAK,EACH,OAAO,kBAAC,EAAD,MACT,KAAK,EACH,OAAO,kBAACsG,EAAD,MACT,QACE,OAAO,MAiByBC,MC5ClCC,G,iLAEF,OACE,kBAAC,EAAD,CACEzB,WAAYjG,KAAKC,MAAMgG,WACvB/E,aAAclB,KAAKC,MAAMiB,mB,GALEhB,aAoBpBC,eAAQ,MATI,SAAAO,GACzB,OAAOiH,YACL,CACE1B,cAEFvF,KAIWP,CAAkCuH,ICsClCE,G,YAxDb,WAAY3H,GAAQ,IAAD,8BACjB,4CAAMA,KASRY,kBAAoB,kBAClB,EAAKgH,UAAS,YACZ,MAAO,CACL5G,oBAFsC,EAAzBA,wBAXA,EAiBnBE,iBAAmB,SAAAG,GACjB,EAAKuG,UAAS,gBAAG5G,EAAH,EAAGA,mBAAH,MAA6B,CACzCA,mBACEiE,OAAO4C,WAAa,KAAO7G,EAAqBA,EAClDC,aAAcI,OArBC,EAyBnBpD,YAAc,kBACZ,EAAK2J,UAAS,kBAAgB,CAC5B5J,MADY,EAAGA,QACEN,EjBdI,ciBcuBA,OAzB9C,EAAKoK,MAAQ,CACX9G,mBAAoBiE,OAAO4C,WAAa,IACxC5G,aAAc,EACdjD,MAAON,EACPO,YAAa,EAAKA,aANH,E,sEA8BT,IAAD,EAC6C8B,KAAK+H,MAAjD7G,EADD,EACCA,aAAcD,EADf,EACeA,mBAAoBhD,EADnC,EACmCA,MAC1C,OACE,kBAAC,EAAa+J,SAAd,CACE3J,MAAO,CAAEJ,MAAO+B,KAAK+H,MAAM9J,MAAOC,YAAa8B,KAAK+H,MAAM7J,cAE1D,yBACEmB,UAAWpB,IAAUN,EAAa,eAAiB,iBAEnD,kBAAC,EAAD,CAAQkD,kBAAmBb,KAAKa,oBAChC,yBAAKf,MAAO,CAAEtC,gBAAiB,OAAQgE,OAAQ,SAC/C,yBAAKnC,UAAU,aACb,kBAAC,EAAD,CACEpB,MAAOA,EACPiD,aAAcA,EACdC,iBAAkBnB,KAAKmB,iBACvBF,mBAAoBA,IAEtB,kBAAC,GAAD,CAAsBC,aAAcA,W,GAjD9BhB,aCIE+H,QACW,cAA7B/C,OAAOgD,SAASC,UAEe,UAA7BjD,OAAOgD,SAASC,UAEhBjD,OAAOgD,SAASC,SAASC,MACvB,2D,aCbSC,eAAgB,CAAEjI,MCKlB,WAAyB,IAAxB2H,EAAuB,uDAAf,GAAIO,EAAW,uCACrC,GpBA8B,qBoBA1BA,EAAO3I,KACT,OAAO2I,EAAOlI,MAGhB,GpBX0B,iBoBWtBkI,EAAO3I,KAAuB,CAAC,IAAD,EAS5B2I,EAAOhI,KAPTkF,EAF8B,EAE9BA,GACA/H,EAH8B,EAG9BA,WACAJ,EAJ8B,EAI9BA,MACAC,EAL8B,EAK9BA,KACAC,EAN8B,EAM9BA,MACAG,EAP8B,EAO9BA,UACAF,EAR8B,EAQ9BA,gBAEF,MAAM,GAAN,mBACKuK,GADL,CAEE,CAAEvC,KAAI/H,aAAYJ,QAAOC,OAAMC,QAAOG,YAAWF,qBAIrD,MpBzByB,gBoByBrB8K,EAAO3I,KACFoI,EAAM1H,QAAO,SAAAC,GAAI,OAAIA,EAAKkF,KAAO8C,EAAO9C,MpB3BxB,gBoB8BrB8C,EAAO3I,MpB5Bc,gBoB4BU2I,EAAO3I,KACjCoI,EAAM1G,KAAI,SAAAf,GACf,OAAIA,EAAKkF,KAAO8C,EAAOhI,KAAKkF,GAAW,eAAK8C,EAAOhI,MAC5CA,KpB9BwB,0BoBkC/BgI,EAAO3I,KACFoI,EAAM1G,KAAI,SAAAf,GACf,OAAO,eAAKA,EAAZ,CAAkB7C,YAAY,OpBnCG,4BoBuCjC6K,EAAO3I,KACFoI,EAAM1G,KAAI,SAAAf,GACf,OAAO,eAAKA,EAAZ,CAAkB7C,YAAY,OAI3BsK,GDjD+B1H,OEHzB,WAA8C,IAA7C0H,EAA4C,uDAApC,CAAEtH,gBAAiB,IAAM6H,EAAW,uCAC1D,MrBHsC,6BqBGlCA,EAAO3I,KACF,eAAKoI,EAAZ,CAAmBtH,gBAAiB6H,EAAO3H,OAGtCoH,KCFM,IACb3H,MANY,GAOZC,OANa,CACbI,gBAAiB,KCMb8H,GAAc,CAACC,MAEfC,GAAmBvD,OAAOwD,sCAAwCC,IAElEC,GAAQC,YACZC,GACAC,GACAN,GAAgB,WAAhB,GAAiBO,IAAe,WAAf,EAAmBT,KAApC,OANgB,MASlBK,GAAMlI,UZNG,SAAAA,GACLwF,IAAajH,MAAK,SAAAmB,GAChBM,EAAS,CACPf,KXJwB,mBWKxBS,gBYIOwI,UCZfK,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,OAEFO,SAASC,eAAe,SNuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtK,MAAK,SAAAuK,GACjCA,EAAaC,kB","file":"static/js/main.04e1fb2c.chunk.js","sourcesContent":["export const UPDATE_NOTE_TITLE_FILTER = 'UPDATE_NOTE_TITLE_FILTER';\n\nexport const UPDATE_NEW_NOTE_VALUE = 'UPDATE_NEW_NOTE_VALUE';\n\nexport const ADD_NEW_NOTE = 'ADD_NEW_NOTE';\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\nexport const TOGGLE_NOTE = 'TOGGLE_NOTE';\nexport const UPDATE_ALL_AS_ARCHIVE = 'UPDATE_ALL_AS_ARCHIVE';\nexport const UPDATE_ALL_AS_UNARCHIVE = 'UPDATE_ALL_AS_UNARCHIVE';\n\nexport const UPDATE_ALL_NOTES = 'UPDATE_ALL_NOTES';\n\nexport const DEFAULT_STATE = {\n  title: '',\n  body: '',\n  image: '',\n  backgroundColor: '',\n  isArchived: false,\n  isStarred: false\n};\n\nexport const LIGHT_THEME = 'LIGHT_THEME';\nexport const DARK_THEME = 'DARK_THEME';\n\nexport const LIGHT_COLOR = '#ececec';\n\nexport const LIGHT_COLORS = [\n  '#ececec',\n  '#880e4f',\n  '#4a148c',\n  '#1a237e',\n  '#1b5e20',\n  '#bf360c'\n];\n\nexport const DARK_COLORS = [\n  '#282c34',\n  '#880e4f',\n  '#4a148c',\n  '#1a237e',\n  '#1b5e20',\n  '#bf360c'\n];\n","import React from 'react';\nimport { LIGHT_THEME } from '../utils/constants';\n\nconst ThemeContext = React.createContext({\n  theme: LIGHT_THEME,\n  toggleTheme: () => {}\n});\n\nexport default ThemeContext;\n","import React, { useRef, useEffect, useState } from 'react';\nimport localforage from 'localforage';\nimport './SearchBox.css';\nimport ThemeContext from '../contexts/ThemeContext';\nimport { DARK_THEME } from '../utils/constants';\n\nconst SearchBox = ({ updateFilter, value }) => {\n  const searchInput = useRef(null);\n  const [filterValue, setFilterValue] = useState(value);\n\n  const handleFilterChange = e => {\n    setFilterValue(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    localforage.getItem('filter', filterValue).then(res => {\n      if (res) {\n        setFilterValue(res);\n        updateFilter(res);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    updateFilter(filterValue);\n    localforage.setItem('filter', filterValue);\n  }, [filterValue, updateFilter]);\n\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div\n          className={\n            theme === DARK_THEME\n              ? 'search-component search-component-dark'\n              : 'search-component search-component-light'\n          }\n        >\n          <i\n            className={\n              theme === DARK_THEME\n                ? 'icon material-icons search-icon'\n                : 'icon icon-light material-icons search-icon'\n            }\n            onClick={() => searchInput.current.focus()}\n          >\n            search\n          </i>\n          <input\n            ref={searchInput}\n            placeholder=\"Search\"\n            className={\n              theme === DARK_THEME\n                ? 'search-input'\n                : 'search-input search-input-light'\n            }\n            type=\"text\"\n            onChange={handleFilterChange}\n            value={filterValue}\n          />\n          <i\n            className={\n              theme === DARK_THEME\n                ? 'icon material-icons search-icon'\n                : 'icon icon-light material-icons search-icon'\n            }\n            onClick={() => {\n              updateFilter('');\n              setFilterValue('');\n            }}\n          >\n            close\n          </i>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/SearchBox';\n\nimport { updateNoteTitleFilter } from '../actions/filterAction';\n\nclass FilterContainer extends Component {\n  render() {\n    return (\n      <div style={{ width: '80%' }}>\n        <SearchBox {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        note.title.toLowerCase().includes(filter.noteTitleFilter) ||\n        note.body.toLowerCase().includes(filter.noteTitleFilter)\n    ),\n    value: filter.noteTitleFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter(value) {\n    dispatch(updateNoteTitleFilter(value));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\n","import { UPDATE_NOTE_TITLE_FILTER } from '../utils/constants';\n\nexport const updateNoteTitleFilter = text => ({\n  type: UPDATE_NOTE_TITLE_FILTER,\n  text\n});\n","import React from 'react';\nimport './Header.css';\nimport FilterContainer from '../containers/FilterContainer';\nimport ThemeContext from '../contexts/ThemeContext';\nimport { DARK_THEME } from '../utils/constants';\n\nfunction Header({ setNavbarCollapse }) {\n  return (\n    <ThemeContext.Consumer>\n      {({ toggleTheme, theme }) => (\n        <header className=\"header\">\n          <div className=\"navbar-icon\">\n            <div\n              className={theme === DARK_THEME ? 'icon' : 'icon icon-light'}\n              onClick={setNavbarCollapse}\n            >\n              <i className=\"material-icons hamburger\">menu</i>\n            </div>\n            <div className=\"icon-title\">Google Keep</div>\n          </div>\n          <div className=\"search-box\">\n            <FilterContainer />\n          </div>\n          <div className=\"action-area\">\n            <div\n              className={theme === DARK_THEME ? 'icon' : 'icon icon-light'}\n              onClick={toggleTheme}\n            >\n              <i className=\"material-icons hamburger\">\n                {theme === DARK_THEME ? 'wb_sunny' : 'brightness_2'}\n              </i>\n            </div>\n          </div>\n        </header>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './NavBar.css';\nimport { DARK_THEME, LIGHT_THEME } from '../utils/constants';\n\nconst MAIN_LIST = [\n  {\n    title: 'Notes',\n    icon: 'note'\n  },\n  {\n    title: 'Archive',\n    icon: 'archive'\n  }\n];\n\nconst NavBar = ({\n  isNavbarCollapased,\n  selctedIndex,\n  setSelectedIndex,\n  theme\n}) => {\n  const renderListItem = MAIN_LIST.map(({ icon, title }, index) => {\n    return (\n      <div\n        key={title}\n        className={\n          selctedIndex === index ? 'list-item list-item-active' : 'list-item'\n        }\n        onClick={() => setSelectedIndex(index)}\n      >\n        <i className=\"material-icons list-icon\">{icon}</i>\n        <div className=\"list-title\">{title}</div>\n      </div>\n    );\n  });\n\n  let className = '';\n  if (isNavbarCollapased) {\n    className = 'navbar navbar-hidden';\n  } else {\n    className = 'navbar';\n  }\n\n  if (theme === LIGHT_THEME) {\n    className += ' navbar-light';\n  }\n\n  return (\n    <nav className={className}>\n      {renderListItem}\n      <div style={{ backgroundColor: '#BBB', height: '1px' }}></div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport './ColorPicker.css';\n\nconst ColorPicker = ({\n  colors,\n  selectedIndex,\n  handleBackgroundColor,\n  setColorPickerVisibility,\n  position\n}) => {\n  return (\n    <div\n      className=\"color-container\"\n      style={{\n        [position.key]: position.value\n      }}\n      onMouseEnter={() => setColorPickerVisibility(true)}\n      onMouseLeave={() => setColorPickerVisibility(false)}\n    >\n      {colors.map((color, index) => (\n        <div\n          key={color}\n          className=\"color\"\n          style={{\n            backgroundColor: `${color}`,\n            opacity: index === selectedIndex ? 0.4 : 1\n          }}\n          onClick={e => {\n            e.stopPropagation();\n            handleBackgroundColor(index, color);\n          }}\n        >\n          {index === selectedIndex && (\n            <i style={{ alignSelf: 'center' }} className=\"material-icons\">\n              check\n            </i>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React, { useState, useRef, useEffect } from 'react';\nimport './Note.css';\nimport ThemeContext from '../contexts/ThemeContext';\nimport {\n  DARK_THEME,\n  LIGHT_THEME,\n  DARK_COLORS,\n  LIGHT_COLORS\n} from '../utils/constants';\nimport ColorPicker from './ColorPicker';\n\nconst Note = ({\n  note,\n  onRemove,\n  onArchive,\n  onStar,\n  onUpdate,\n  setModalVisibility,\n  setSelectedNote,\n  dimensions\n}) => {\n  const colorIndex = DARK_COLORS.indexOf(note.backgroundColor);\n  const [showActions, setShowActions] = useState(false);\n  const [colorPickerVisibility, setColorPickerVisibility] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(\n    colorIndex === -1 ? 0 : colorIndex\n  );\n  const noteRef = useRef(null);\n  const [gridRowEnd, setGridRowEnd] = useState(1);\n\n  useEffect(() => {\n    let rowSpan = Math.ceil(\n      (noteRef.current.querySelector('.note-inner').getBoundingClientRect()\n        .height +\n        dimensions.rowGap) /\n        (dimensions.rowHeight + dimensions.rowGap)\n    );\n    setGridRowEnd(rowSpan);\n  }, [dimensions]);\n\n  const onNoteSelect = e => {\n    e.stopPropagation();\n    setModalVisibility(true);\n    setSelectedNote(note);\n  };\n\n  const handleArchive = e => {\n    e.stopPropagation();\n    onArchive(note);\n  };\n\n  const handleRemove = e => {\n    e.stopPropagation();\n    onRemove(note);\n  };\n\n  const handleStar = e => {\n    e.stopPropagation();\n    onStar(note);\n  };\n\n  const handleBackgroundColor = (index, color) => {\n    setSelectedIndex(index);\n    let updatedNote = {\n      ...note,\n      backgroundColor: color\n    };\n    onUpdate(updatedNote);\n  };\n\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div ref={noteRef} style={{ gridRowEnd: `span ${gridRowEnd}` }}>\n          <div\n            className=\"note-inner\"\n            onMouseOver={() => setShowActions(true)}\n            onMouseEnter={() => setShowActions(true)}\n            onMouseLeave={() => setShowActions(false)}\n            onClick={onNoteSelect}\n            style={{\n              position: 'relative',\n              backgroundColor: `${note.backgroundColor}`,\n              color:\n                theme === LIGHT_THEME && note.backgroundColor === ''\n                  ? '#000000'\n                  : '#eeeeee'\n            }}\n          >\n            {colorPickerVisibility && (\n              <ColorPicker\n                colors={theme === DARK_THEME ? DARK_COLORS : LIGHT_COLORS}\n                selectedIndex={selectedIndex}\n                handleBackgroundColor={handleBackgroundColor}\n                setColorPickerVisibility={setColorPickerVisibility}\n                position={{ key: 'right', value: '16px' }}\n              />\n            )}\n            {showActions && (\n              <div\n                className={\n                  theme === DARK_THEME\n                    ? 'star-icon-action icon'\n                    : 'star-icon-action icon icon-light'\n                }\n                onClick={handleStar}\n              >\n                <i className=\"material-icons md-18\">\n                  {note.isStarred ? 'star' : 'star_border'}\n                </i>\n              </div>\n            )}\n            <div className=\"note-title\">{note.title}</div>\n            <div className=\"note-content\">{note.body}</div>\n            {note.image !== '' && (\n              <div className=\"note-image-container\">\n                <img\n                  className=\"note-image\"\n                  alt=\"invalid_img_url\"\n                  src={note.image}\n                />\n              </div>\n            )}\n            <div className=\"note-actions\">\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                  onClick={handleArchive}\n                >\n                  <i\n                    className={\n                      note.isArchived\n                        ? 'material-icons md-18'\n                        : 'material-icons-outlined  md-18'\n                    }\n                  >\n                    archive\n                  </i>\n                </div>\n              )}\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                >\n                  <i className=\"material-icons md-18\">add_photo_alternate</i>\n                </div>\n              )}\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                  onMouseOver={() => setColorPickerVisibility(true)}\n                  onMouseOut={() => setColorPickerVisibility(false)}\n                >\n                  <i className=\"material-icons md-18\">color_lens</i>\n                </div>\n              )}\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                  onClick={handleRemove}\n                >\n                  <i className=\"material-icons md-18\">delete</i>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default Note;\n","import React, { useState, useRef, useEffect } from 'react';\nimport autosize from 'autosize';\nimport localforage from 'localforage';\nimport { DEFAULT_STATE, DARK_THEME } from '../utils/constants';\nimport Note from './Note';\nimport ThemeContext from '../contexts/ThemeContext';\n\nconst Notes = ({ notes, onRemove, onArchive, onUpdate, onStar }) => {\n  const [selectedNote, setSelectedNote] = useState(DEFAULT_STATE);\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [tagVisibility, setTagVisibility] = useState(false);\n  const [dimensions, setDimensions] = useState({ rowHeight: 0, rowGap: 0 });\n  const contentInput = useRef(null);\n  const gridNote = useRef(null);\n\n  useEffect(() => {\n    contentInput.current.focus();\n    autosize(contentInput.current);\n    localforage.getItem('selectionInfo').then(res => {\n      if (res && res.modalVisibility && res.selectedNote) {\n        setModalVisibility(true);\n        setSelectedNote(res.selectedNote);\n      }\n    });\n    resizeGridItem();\n  }, []);\n\n  useEffect(() => {\n    localforage.setItem('selectionInfo', { modalVisibility, selectedNote });\n  }, [modalVisibility, selectedNote]);\n\n  useEffect(() => {\n    if (\n      notes.filter(item => item.isStarred).length > 0 &&\n      notes.filter(item => !item.isStarred).length > 0\n    ) {\n      setTagVisibility(true);\n    } else {\n      setTagVisibility(false);\n    }\n  }, [notes]);\n\n  const resizeGridItem = () => {\n    const rowHeight = parseInt(\n      window\n        .getComputedStyle(gridNote.current)\n        .getPropertyValue('grid-auto-rows')\n    );\n    const rowGap = parseInt(\n      window.getComputedStyle(gridNote.current).getPropertyValue('grid-row-gap')\n    );\n    setDimensions({ rowGap, rowHeight });\n  };\n\n  const onNoteChange = e => {\n    let note = {\n      ...selectedNote,\n      [e.currentTarget.name]: e.currentTarget.value\n    };\n    setSelectedNote(note);\n    onUpdate(note);\n  };\n\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div>\n          {tagVisibility && (\n            <div style={{ marginBottom: '8px' }} className=\"note-tag\">\n              STARRED\n            </div>\n          )}\n          <div className=\"notes-grid\">\n            {notes\n              .filter(item => item.isStarred)\n              .map(item => {\n                return (\n                  <Note\n                    dimensions={dimensions}\n                    key={item.id}\n                    note={item}\n                    onRemove={onRemove}\n                    onArchive={onArchive}\n                    onStar={onStar}\n                    onUpdate={onUpdate}\n                    setModalVisibility={setModalVisibility}\n                    setSelectedNote={setSelectedNote}\n                  />\n                );\n              })}\n            {modalVisibility}\n          </div>\n          {tagVisibility && (\n            <div\n              style={{ marginTop: '16px', marginBottom: '8px' }}\n              className=\"note-tag\"\n            >\n              OTHERS\n            </div>\n          )}\n          <div ref={gridNote} className=\"notes-grid\">\n            {notes\n              .filter(item => !item.isStarred)\n              .map(item => {\n                return (\n                  <Note\n                    dimensions={dimensions}\n                    key={item.id}\n                    note={item}\n                    onRemove={onRemove}\n                    onArchive={onArchive}\n                    onStar={onStar}\n                    onUpdate={onUpdate}\n                    setModalVisibility={setModalVisibility}\n                    setSelectedNote={setSelectedNote}\n                  />\n                );\n              })}\n            {modalVisibility}\n          </div>\n          <div className={modalVisibility ? 'modale opened' : 'modale'}>\n            <div\n              className={\n                theme === DARK_THEME\n                  ? 'modal-dialog'\n                  : 'modal-dialog modal-dialog-light'\n              }\n            >\n              <div className=\"modal-content\">\n                <input\n                  onChange={onNoteChange}\n                  value={selectedNote.title}\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-title-input'\n                      : 'note-title-input note-title-input-light'\n                  }\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                />\n                <textarea\n                  onChange={onNoteChange}\n                  value={selectedNote.body}\n                  name=\"body\"\n                  ref={contentInput}\n                  rows={1}\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-content-input'\n                      : 'note-content-input note-content-input-light'\n                  }\n                  type=\"text\"\n                  placeholder=\"Take a note...\"\n                ></textarea>\n                <input\n                  onChange={onNoteChange}\n                  value={selectedNote.image}\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-title-input'\n                      : 'note-title-input note-title-input-light'\n                  }\n                  type=\"text\"\n                  name=\"image\"\n                  placeholder=\"Paste your image url here\"\n                />\n                <button\n                  className={\n                    theme === DARK_THEME\n                      ? 'modal-btn note-btn'\n                      : 'modal-btn note-btn note-btn-light'\n                  }\n                  onClick={() => setModalVisibility(false)}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default Notes;\n","import localforage from 'localforage';\n\nwindow.localforage = localforage;\n\nconst getAll = async () => {\n  const notes = await localforage.getItem('notes');\n  if (!notes) await localforage.setItem('notes', []);\n  return notes || [];\n};\n\nexport default {\n  async add(note) {\n    const notes = await getAll();\n    const newNote = { ...note, id: Date.now() };\n    localforage.setItem('notes', [...notes, newNote]);\n    return newNote;\n  },\n\n  async getAll() {\n    return await getAll();\n  },\n\n  async delete({ id }) {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.filter(note => note.id !== id)\n    );\n  },\n\n  async update(updatedNote) {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.map(note => {\n        if (note.id === updatedNote.id) return { ...note, ...updatedNote };\n        return note;\n      })\n    );\n  },\n\n  async updateAllAsArchive() {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.map(note => ({ ...note, isArchived: false }))\n    );\n  },\n\n  async deleteArchivedNotes() {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.filter(({ isArchived }) => isArchived)\n    );\n  }\n};\n","import {\n  UPDATE_ALL_NOTES,\n  ADD_NEW_NOTE,\n  UPDATE_NOTE,\n  REMOVE_NOTE,\n  TOGGLE_NOTE,\n  UPDATE_ALL_AS_ARCHIVE\n} from '../utils/constants';\n\nimport API from '../apiCaller';\n\nexport const getAllNotes = () => {\n  return dispatch => {\n    API.getAll().then(notes => {\n      dispatch({\n        type: UPDATE_ALL_NOTES,\n        notes\n      });\n    });\n  };\n};\n\nexport const addNewNote = (\n  title,\n  body,\n  image = '',\n  backgroundColor = '',\n  isStarred = false,\n  isArchived = false\n) => {\n  const note = {\n    isStarred,\n    isArchived,\n    title,\n    body,\n    image,\n    backgroundColor\n  };\n\n  return dispatch => {\n    API.add(note).then(note => {\n      dispatch({\n        type: ADD_NEW_NOTE,\n        note\n      });\n    });\n  };\n};\n\nexport const updateNote = note => {\n  return (dispatch, getState) => {\n    API.update(note).then(() => {\n      dispatch({\n        type: UPDATE_NOTE,\n        note\n      });\n    });\n  };\n};\n\nexport const starNote = note => {\n  const updatedNote = { ...note, isStarred: !note.isStarred };\n  return (dispatch, getState) => {\n    API.update(updatedNote).then(() => {\n      dispatch({\n        type: TOGGLE_NOTE,\n        note: updatedNote\n      });\n    });\n  };\n};\n\nexport const toggleNote = note => {\n  const updatedNote = { ...note, isArchived: !note.isArchived };\n  return (dispatch, getState) => {\n    API.update(updatedNote).then(() => {\n      dispatch({\n        type: TOGGLE_NOTE,\n        note: updatedNote\n      });\n    });\n  };\n};\n\nexport const removeNote = note => {\n  return dispatch => {\n    API.delete(note).then(() => {\n      dispatch({\n        type: REMOVE_NOTE,\n        id: note.id\n      });\n    });\n  };\n};\n\nexport const updateAllAsArchive = () => {\n  return dispatch => {\n    API.updateAllAsArchive().then(() => {\n      dispatch({\n        type: UPDATE_ALL_AS_ARCHIVE\n      });\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Notes from '../components/Notes';\n\nimport {\n  toggleNote,\n  removeNote,\n  updateNote,\n  starNote\n} from '../actions/noteAction';\n\nclass NotesContainer extends Component {\n  render() {\n    const { notes, onRemove, onArchive, onUpdate, onStar } = this.props;\n    return (\n      <Notes\n        notes={notes}\n        onRemove={onRemove}\n        onArchive={onArchive}\n        onUpdate={onUpdate}\n        onStar={onStar}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        !note.isArchived &&\n        (note.title\n          .toLowerCase()\n          .includes(filter.noteTitleFilter.toLowerCase()) ||\n          note.body\n            .toLowerCase()\n            .includes(filter.noteTitleFilter.toLowerCase()))\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive(note) {\n    dispatch(toggleNote(note));\n  },\n  onRemove(note) {\n    dispatch(removeNote(note));\n  },\n  onUpdate(note) {\n    dispatch(updateNote(note));\n  },\n  onStar(note) {\n    dispatch(starNote(note));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Notes from '../components/Notes';\n\nimport {\n  toggleNote,\n  removeNote,\n  updateNote,\n  starNote\n} from '../actions/noteAction';\n\nclass NotesContainer extends Component {\n  render() {\n    const { notes, onRemove, onArchive, onUpdate, onStar } = this.props;\n    return (\n      <Notes\n        notes={notes}\n        onRemove={onRemove}\n        onArchive={onArchive}\n        onUpdate={onUpdate}\n        onStar={onStar}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        note.isArchived &&\n        (note.title\n          .toLowerCase()\n          .includes(filter.noteTitleFilter.toLowerCase()) ||\n          note.body\n            .toLowerCase()\n            .includes(filter.noteTitleFilter.toLowerCase()))\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive(note) {\n    dispatch(toggleNote(note));\n  },\n  onRemove(note) {\n    dispatch(removeNote(note));\n  },\n  onUpdate(note) {\n    dispatch(updateNote(note));\n  },\n  onStar(note) {\n    dispatch(starNote(note));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\n","import React, { useRef, useEffect, useState } from 'react';\nimport autosize from 'autosize';\nimport ThemeContext from '../contexts/ThemeContext';\nimport {\n  DARK_THEME,\n  DARK_COLORS,\n  LIGHT_COLORS,\n  LIGHT_THEME\n} from '../utils/constants';\nimport ColorPicker from './ColorPicker';\n\nconst NewNote = ({ isFocussed, setFocus, noteState, setNoteState, onSave }) => {\n  const contentInput = useRef(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [colorPickerVisibility, setColorPickerVisibility] = useState(false);\n  const [imageInputVisibility, setImageInputVisibility] = useState(false);\n\n  useEffect(() => {\n    if (contentInput && contentInput.current) {\n      contentInput.current.focus();\n      autosize(contentInput.current);\n    }\n  }, []);\n\n  const handleChange = e => {\n    setNoteState({\n      ...noteState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleStar = () => {\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        isStarred: !noteState.isStarred\n      };\n    });\n  };\n\n  const handleArchive = () => {\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        isArchived: !noteState.isArchived\n      };\n    });\n  };\n\n  const handleBackgroundColor = (index, color) => {\n    setSelectedIndex(index);\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        backgroundColor: color\n      };\n    });\n  };\n\n  const handleAttachPicture = () => {\n    setImageInputVisibility(imageInputVisibility => !imageInputVisibility);\n  };\n\n  const handleClearImage = () => {\n    setImageInputVisibility(false);\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        image: ''\n      };\n    });\n  };\n\n  if (isFocussed) {\n    return (\n      <ThemeContext.Consumer>\n        {({ theme }) => (\n          <div\n            className=\"note-add\"\n            style={{\n              position: 'relative',\n              backgroundColor:\n                theme === DARK_THEME\n                  ? `${DARK_COLORS[selectedIndex]}`\n                  : `${LIGHT_COLORS[selectedIndex]}`\n            }}\n            onClick={e => e.stopPropagation()}\n          >\n            {colorPickerVisibility && (\n              <ColorPicker\n                colors={theme === DARK_THEME ? DARK_COLORS : LIGHT_COLORS}\n                selectedIndex={selectedIndex}\n                handleBackgroundColor={handleBackgroundColor}\n                setColorPickerVisibility={setColorPickerVisibility}\n                position={{ key: 'left', value: '16px' }}\n              />\n            )}\n            <div\n              className={\n                theme === LIGHT_THEME && selectedIndex === 0\n                  ? 'star-icon icon icon-light'\n                  : 'star-icon icon material-icon-white'\n              }\n              onClick={handleStar}\n            >\n              <i className=\"material-icons\">\n                {noteState.isStarred ? 'star' : 'star_border'}\n              </i>\n            </div>\n            <input\n              onChange={handleChange}\n              value={noteState.title}\n              className={\n                theme === LIGHT_THEME && selectedIndex === 0\n                  ? 'note-title-input note-title-input-light'\n                  : 'note-title-input'\n              }\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n            <textarea\n              onChange={handleChange}\n              value={noteState.body}\n              name=\"body\"\n              ref={contentInput}\n              rows={1}\n              className={\n                theme === LIGHT_THEME && selectedIndex === 0\n                  ? 'note-content-input note-content-input-light'\n                  : 'note-content-input'\n              }\n              type=\"text\"\n              placeholder=\"Take a note...\"\n            ></textarea>\n            {imageInputVisibility && (\n              <input\n                onChange={handleChange}\n                value={noteState.image}\n                className={\n                  theme === LIGHT_THEME && selectedIndex === 0\n                    ? 'note-title-input note-title-input-light'\n                    : 'note-title-input'\n                }\n                type=\"text\"\n                name=\"image\"\n                placeholder=\"Paste your image url here\"\n              />\n            )}\n            {noteState.image !== '' && (\n              <div className=\"note-image-container\">\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'icon note-image-remove'\n                      : 'icon icon-light note-image-remove'\n                  }\n                  onClick={handleClearImage}\n                >\n                  <i className=\"material-icons\">clear</i>\n                </div>\n                <img\n                  className=\"note-image\"\n                  alt=\"invalid_img_url\"\n                  src={noteState.image}\n                />\n              </div>\n            )}\n            <div className=\"note-add-actions\">\n              <div style={{ display: 'flex' }}>\n                <div\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'icon  icon-light'\n                      : 'icon material-icon-white'\n                  }\n                  onClick={handleArchive}\n                >\n                  <i\n                    className={\n                      noteState.isArchived\n                        ? 'material-icons'\n                        : 'material-icons-outlined'\n                    }\n                  >\n                    archive\n                  </i>\n                </div>\n                <div\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'icon  icon-light'\n                      : 'icon material-icon-white'\n                  }\n                  onClick={handleAttachPicture}\n                >\n                  <i\n                    className={\n                      noteState.isArchived\n                        ? 'material-icons'\n                        : 'material-icons-outlined'\n                    }\n                  >\n                    add_photo_alternate\n                  </i>\n                </div>\n                <div\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'icon  icon-light'\n                      : 'icon material-icon-white'\n                  }\n                  onMouseOver={() => setColorPickerVisibility(true)}\n                  onMouseOut={() => setColorPickerVisibility(false)}\n                >\n                  <i className=\"material-icons\">color_lens</i>\n                </div>\n              </div>\n              <div style={{ display: 'flex' }}>\n                <button\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'note-btn note-btn-light'\n                      : 'note-btn'\n                  }\n                  onClick={() => {\n                    onSave();\n                    setSelectedIndex(0);\n                  }}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  } else {\n    return (\n      <ThemeContext.Consumer>\n        {({ theme }) => (\n          <div\n            style={{ display: 'flex' }}\n            className=\"note-add\"\n            onClick={e => e.stopPropagation()}\n          >\n            <div className=\"note-add-unfocussed\" onClick={() => setFocus(true)}>\n              Take a note\n            </div>\n            <div style={{ flex: '1', display: 'flex' }}>\n              <div\n                className={theme === DARK_THEME ? 'icon' : 'icon icon-light'}\n              >\n                <i className=\"material-icons\">add_photo_alternate</i>\n              </div>\n            </div>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n};\n\nexport default NewNote;\n","import React, { useState } from 'react';\nimport './MainDisplay.css';\nimport NotesContainer from '../containers/NotesContainer';\nimport ArchivedNotesContainer from '../containers/ArchivedNotesContainer';\nimport NewNote from '../components/NewNote';\nimport { DEFAULT_STATE } from '../utils/constants';\n\nconst MainDisplay = ({ selctedIndex, addNewNote }) => {\n  const [isFocussed, setFocus] = useState(false);\n  const [noteState, setNoteState] = useState(DEFAULT_STATE);\n\n  const onSave = () => {\n    let {\n      title,\n      body,\n      isStarred,\n      isArchived,\n      backgroundColor,\n      image\n    } = noteState;\n    if (title !== '' || body !== '') {\n      addNewNote(title, body, image, backgroundColor, isStarred, isArchived);\n      setNoteState(DEFAULT_STATE);\n    }\n    setFocus(false);\n  };\n\n  const renderContainer = () => {\n    switch (selctedIndex) {\n      case 0:\n        return <NotesContainer />;\n      case 1:\n        return <ArchivedNotesContainer />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <main className=\"main\" onClick={onSave}>\n      {selctedIndex === 0 && (\n        <div className=\"note-add-container\">\n          <NewNote\n            isFocussed={isFocussed}\n            setFocus={setFocus}\n            noteState={noteState}\n            setNoteState={setNoteState}\n            onSave={onSave}\n          />\n        </div>\n      )}\n      <div className=\"notes-container\">{renderContainer()}</div>\n    </main>\n  );\n};\n\nexport default MainDisplay;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport MainDisplay from '../components/MainDisplay';\n\nimport { addNewNote } from '../actions/noteAction';\n\nclass MainDisplayContainer extends Component {\n  render() {\n    return (\n      <MainDisplay\n        addNewNote={this.props.addNewNote}\n        selctedIndex={this.props.selctedIndex}\n      />\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      addNewNote\n    },\n    dispatch\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(MainDisplayContainer);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport NavBar from './NavBar';\nimport MainDisplayContainer from '../containers/MainDisplayContainer';\nimport ThemeContext from '../contexts/ThemeContext';\nimport { LIGHT_THEME, DARK_THEME } from '../utils/constants';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavbarCollapased: window.innerWidth < 775 ? true : false,\n      selctedIndex: 0,\n      theme: DARK_THEME,\n      toggleTheme: this.toggleTheme\n    };\n  }\n\n  setNavbarCollapse = () =>\n    this.setState(({ isNavbarCollapased }) => {\n      return {\n        isNavbarCollapased: !isNavbarCollapased\n      };\n    });\n\n  setSelectedIndex = index => {\n    this.setState(({ isNavbarCollapased }) => ({\n      isNavbarCollapased:\n        window.innerWidth < 775 ? !isNavbarCollapased : isNavbarCollapased,\n      selctedIndex: index\n    }));\n  };\n\n  toggleTheme = () =>\n    this.setState(({ theme }) => ({\n      theme: theme === DARK_THEME ? LIGHT_THEME : DARK_THEME\n    }));\n\n  render() {\n    const { selctedIndex, isNavbarCollapased, theme } = this.state;\n    return (\n      <ThemeContext.Provider\n        value={{ theme: this.state.theme, toggleTheme: this.state.toggleTheme }}\n      >\n        <div\n          className={theme === DARK_THEME ? 'App App-dark' : 'App App-light'}\n        >\n          <Header setNavbarCollapse={this.setNavbarCollapse} />\n          <div style={{ backgroundColor: '#BBB', height: '1px' }}></div>\n          <div className=\"container\">\n            <NavBar\n              theme={theme}\n              selctedIndex={selctedIndex}\n              setSelectedIndex={this.setSelectedIndex}\n              isNavbarCollapased={isNavbarCollapased}\n            />\n            <MainDisplayContainer selctedIndex={selctedIndex} />\n          </div>\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport notes from './noteReducer';\nimport filter from './filterReducer';\n\nexport default combineReducers({ notes, filter });\n","import {\n  UPDATE_ALL_NOTES,\n  ADD_NEW_NOTE,\n  UPDATE_NOTE,\n  REMOVE_NOTE,\n  TOGGLE_NOTE,\n  UPDATE_ALL_AS_ARCHIVE,\n  UPDATE_ALL_AS_UNARCHIVE\n} from '../utils/constants';\n\nexport default (state = {}, action) => {\n  if (action.type === UPDATE_ALL_NOTES) {\n    return action.notes;\n  }\n\n  if (action.type === ADD_NEW_NOTE) {\n    const {\n      id,\n      isArchived,\n      title,\n      body,\n      image,\n      isStarred,\n      backgroundColor\n    } = action.note;\n    return [\n      ...state,\n      { id, isArchived, title, body, image, isStarred, backgroundColor }\n    ];\n  }\n\n  if (action.type === REMOVE_NOTE) {\n    return state.filter(note => note.id !== action.id);\n  }\n\n  if (action.type === UPDATE_NOTE || action.type === TOGGLE_NOTE) {\n    return state.map(note => {\n      if (note.id === action.note.id) return { ...action.note };\n      return note;\n    });\n  }\n\n  if (action.type === UPDATE_ALL_AS_ARCHIVE) {\n    return state.map(note => {\n      return { ...note, isArchived: true };\n    });\n  }\n\n  if (action.type === UPDATE_ALL_AS_UNARCHIVE) {\n    return state.map(note => {\n      return { ...note, isArchived: false };\n    });\n  }\n\n  return state;\n};\n","import { UPDATE_NOTE_TITLE_FILTER } from '../utils/constants';\n\nexport default (state = { noteTitleFilter: '' }, action) => {\n  if (action.type === UPDATE_NOTE_TITLE_FILTER) {\n    return { ...state, noteTitleFilter: action.text };\n  }\n\n  return state;\n};\n","const notes = [];\nconst filter = {\n  noteTitleFilter: ''\n};\n\nexport default {\n  notes,\n  filter\n};\n","import { compose, applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\nimport initialState from './initialState';\n\nimport { getAllNotes } from '../actions/noteAction';\n\nconst middlewares = [thunk];\nconst enhancers = [];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeEnhancers(applyMiddleware(...middlewares), ...enhancers)\n);\n\nstore.dispatch(getAllNotes());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}