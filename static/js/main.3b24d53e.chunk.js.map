{"version":3,"sources":["components/SearchBox.js","utils/constants.js","containers/FilterContainer.js","actions/filterAction.js","components/Header.js","components/NavBar.js","components/Note.js","components/Notes.js","apiCaller/index.js","actions/noteAction.js","containers/NotesContainer.js","containers/ArchivedNotesContainer.js","components/NewNote.js","components/MainDisplay.js","containers/MainDisplayContainer.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/noteReducer.js","reducers/filterReducer.js","store/initialState.js","store/index.js","index.js"],"names":["SearchBox","updateFilter","value","searchInput","useRef","useState","filterValue","setFilterValue","useEffect","localforage","getItem","then","res","setItem","className","onClick","current","focus","ref","placeholder","type","onChange","e","currentTarget","DEFAULT_STATE","title","body","image","isArchived","isStarred","FilterContainer","style","width","this","props","Component","connect","notes","filter","note","toLowerCase","includes","noteTitleFilter","dispatch","text","Header","setNavbarCollapse","MAIN_LIST","icon","NavBar","isNavbarCollapased","selctedIndex","setSelectedIndex","renderListItem","map","index","key","backgroundColor","height","Note","onRemove","onArchive","onStar","setModalVisibility","setSelectedNote","showActions","setShowActions","onMouseOver","onMouseEnter","onMouseLeave","stopPropagation","Notes","onUpdate","selectedNote","modalVisibility","tagVisibility","setTagVisibility","contentInput","autosize","item","length","onNoteChange","name","id","marginTop","rows","window","getAll","a","async","newNote","Date","now","updatedNote","addNewNote","API","toggleNote","getState","removeNote","NotesContainer","updateNote","starNote","NewNote","isFocussed","setFocus","noteState","setNoteState","onSave","handleChange","target","display","flex","MainDisplay","ArchivedNotesContainer","renderContainer","MainDisplayContainer","bindActionCreators","App","setState","state","Boolean","location","hostname","match","combineReducers","action","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","initialState","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b24d53e.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport localforage from 'localforage';\nimport './SearchBox.css';\n\nconst SearchBox = ({ updateFilter, value }) => {\n  const searchInput = useRef(null);\n  const [filterValue, setFilterValue] = useState(value);\n\n  const handleFilterChange = e => {\n    updateFilter(e.currentTarget.value);\n    setFilterValue(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    localforage.getItem('filter', filterValue).then(res => {\n      setFilterValue(res);\n      updateFilter(res);\n    });\n  }, []);\n\n  useEffect(() => {\n    localforage.setItem('filter', filterValue);\n  }, [filterValue]);\n\n  return (\n    <div className=\"search-component search-component-dark\">\n      <i\n        className=\"icon material-icons search-icon\"\n        onClick={() => searchInput.current.focus()}\n      >\n        search\n      </i>\n      <input\n        ref={searchInput}\n        placeholder=\"Search\"\n        className=\"search-input\"\n        type=\"text\"\n        onChange={handleFilterChange}\n        value={filterValue}\n      />\n      <i\n        className=\"icon material-icons search-icon\"\n        onClick={() => {\n          updateFilter('');\n          setFilterValue('');\n        }}\n      >\n        close\n      </i>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","export const UPDATE_NOTE_TITLE_FILTER = 'UPDATE_NOTE_TITLE_FILTER';\n\nexport const UPDATE_NEW_NOTE_VALUE = 'UPDATE_NEW_NOTE_VALUE';\n\nexport const ADD_NEW_NOTE = 'ADD_NEW_NOTE';\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\nexport const TOGGLE_NOTE = 'TOGGLE_NOTE';\nexport const UPDATE_ALL_AS_ARCHIVE = 'UPDATE_ALL_AS_ARCHIVE';\nexport const UPDATE_ALL_AS_UNARCHIVE = 'UPDATE_ALL_AS_UNARCHIVE';\n\nexport const UPDATE_ALL_NOTES = 'UPDATE_ALL_NOTES';\n\nexport const DEFAULT_STATE = {\n  title: '',\n  body: '',\n  image: '',\n  isArchived: false,\n  isStarred: false\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/SearchBox';\n\nimport { updateNoteTitleFilter } from '../actions/filterAction';\n\nclass FilterContainer extends Component {\n  render() {\n    return (\n      <div style={{ width: '80%' }}>\n        <SearchBox {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        note.title.toLowerCase().includes(filter.noteTitleFilter) ||\n        note.body.toLowerCase().includes(filter.noteTitleFilter)\n    ),\n    value: filter.noteTitleFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter(value) {\n    dispatch(updateNoteTitleFilter(value));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\n","import { UPDATE_NOTE_TITLE_FILTER } from '../utils/constants';\n\nexport const updateNoteTitleFilter = text => ({\n  type: UPDATE_NOTE_TITLE_FILTER,\n  text\n});\n","import React from 'react';\nimport './Header.css';\nimport FilterContainer from '../containers/FilterContainer';\n\nfunction Header({ setNavbarCollapse }) {\n  return (\n    <header className=\"header\">\n      <div className=\"navbar-icon\">\n        <div className=\"icon\" onClick={setNavbarCollapse}>\n          <i className=\"material-icons hamburger\">menu</i>\n        </div>\n        <div className=\"icon-title\">Google Keep</div>\n      </div>\n      <div className=\"search-box\">\n        <FilterContainer />\n      </div>\n      <div className=\"action-area\">Action Area</div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport './NavBar.css';\n\nconst MAIN_LIST = [\n  {\n    title: 'Notes',\n    icon: 'note'\n  },\n  {\n    title: 'Archive',\n    icon: 'archive'\n  }\n];\n\nconst NavBar = ({ isNavbarCollapased, selctedIndex, setSelectedIndex }) => {\n  const renderListItem = MAIN_LIST.map(({ icon, title }, index) => {\n    return (\n      <div\n        key={title}\n        className={\n          selctedIndex === index ? 'list-item list-item-active' : 'list-item'\n        }\n        onClick={() => setSelectedIndex(index)}\n      >\n        <i className=\"material-icons list-icon\">{icon}</i>\n        <div className=\"list-title\">{title}</div>\n      </div>\n    );\n  });\n\n  return (\n    <nav className={isNavbarCollapased ? 'navbar navbar-hidden' : 'navbar'}>\n      {renderListItem}\n      <div style={{ backgroundColor: '#BBB', height: '1px' }}></div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport './Note.css';\n\nconst Note = ({\n  note,\n  onRemove,\n  onArchive,\n  onStar,\n  setModalVisibility,\n  setSelectedNote\n}) => {\n  const [showActions, setShowActions] = useState(false);\n\n  const onNoteSelect = e => {\n    e.stopPropagation();\n    setModalVisibility(true);\n    setSelectedNote(note);\n  };\n\n  const handleArchive = e => {\n    e.stopPropagation();\n    onArchive(note);\n  };\n\n  const handleRemove = e => {\n    e.stopPropagation();\n    onRemove(note);\n  };\n\n  const handleStar = e => {\n    e.stopPropagation();\n    onStar(note);\n  };\n\n  return (\n    <div className=\"note\">\n      <div\n        className=\"note-inner\"\n        onMouseOver={() => setShowActions(true)}\n        onMouseEnter={() => setShowActions(true)}\n        onMouseLeave={() => setShowActions(false)}\n        onClick={onNoteSelect}\n      >\n        {showActions && (\n          <div className=\"star-icon-action icon\" onClick={handleStar}>\n            <i className=\"material-icons md-18\">\n              {note.isStarred ? 'star' : 'star_border'}\n            </i>\n          </div>\n        )}\n        <div className=\"note-title\">{note.title}</div>\n        <div className=\"note-content\">{note.body}</div>\n        <div className=\"note-actions\">\n          {showActions && (\n            <div className=\"note-action icon\" onClick={handleArchive}>\n              <i\n                className={\n                  note.isArchived\n                    ? 'material-icons md-18'\n                    : 'material-icons-outlined  md-18'\n                }\n              >\n                archive\n              </i>\n            </div>\n          )}\n          {showActions && (\n            <div className=\"note-action icon\">\n              <i className=\"material-icons md-18\">add_photo_alternate</i>\n            </div>\n          )}\n          {showActions && (\n            <div className=\"note-action icon\">\n              <i className=\"material-icons md-18\">color_lens</i>\n            </div>\n          )}\n          {showActions && (\n            <div className=\"note-action icon\" onClick={handleRemove}>\n              <i className=\"material-icons md-18\">delete</i>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Note;\n","import React, { useState, useRef, useEffect } from 'react';\nimport autosize from 'autosize';\nimport localforage from 'localforage';\nimport { DEFAULT_STATE } from '../utils/constants';\nimport Note from './Note';\n\nconst Notes = ({ notes, onRemove, onArchive, onUpdate, onStar }) => {\n  const [selectedNote, setSelectedNote] = useState(DEFAULT_STATE);\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [tagVisibility, setTagVisibility] = useState(false);\n  const contentInput = useRef(null);\n\n  useEffect(() => {\n    contentInput.current.focus();\n    autosize(contentInput.current);\n    localforage.getItem('selectionInfo').then(res => {\n      if (res && res.modalVisibility && res.selectedNote) {\n        setModalVisibility(true);\n        setSelectedNote(res.selectedNote);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    localforage.setItem('selectionInfo', { modalVisibility, selectedNote });\n  }, [modalVisibility, selectedNote]);\n\n  useEffect(() => {\n    if (notes.filter(item => item.isStarred).length > 0) {\n      setTagVisibility(true);\n    } else {\n      setTagVisibility(false);\n    }\n  }, [notes]);\n\n  const onNoteChange = e => {\n    let note = {\n      ...selectedNote,\n      [e.currentTarget.name]: e.currentTarget.value\n    };\n    setSelectedNote(note);\n    onUpdate(note);\n  };\n\n  return (\n    <div>\n      {tagVisibility && <div className=\"note-tag\">STARRED</div>}\n      <div className=\"notes\">\n        {notes\n          .filter(item => item.isStarred)\n          .map(item => {\n            return (\n              <Note\n                key={item.id}\n                className=\"note\"\n                note={item}\n                onRemove={onRemove}\n                onArchive={onArchive}\n                onStar={onStar}\n                setModalVisibility={setModalVisibility}\n                setSelectedNote={setSelectedNote}\n              />\n            );\n          })}\n        {modalVisibility}\n      </div>\n      {tagVisibility && (\n        <div style={{ marginTop: '8px' }} className=\"note-tag\">\n          OTHERS\n        </div>\n      )}\n      <div className=\"notes\">\n        {notes\n          .filter(item => !item.isStarred)\n          .map(item => {\n            return (\n              <Note\n                key={item.id}\n                className=\"note\"\n                note={item}\n                onRemove={onRemove}\n                onArchive={onArchive}\n                onStar={onStar}\n                setModalVisibility={setModalVisibility}\n                setSelectedNote={setSelectedNote}\n              />\n            );\n          })}\n        {modalVisibility}\n      </div>\n      <div className={modalVisibility ? 'modale opened' : 'modale'}>\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <input\n              onChange={onNoteChange}\n              value={selectedNote.title}\n              className=\"note-title-input\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n            <textarea\n              onChange={onNoteChange}\n              value={selectedNote.body}\n              name=\"body\"\n              ref={contentInput}\n              rows={1}\n              className=\"note-content-input\"\n              type=\"text\"\n              placeholder=\"Take a note...\"\n            ></textarea>\n            <button\n              className=\"modal-btn note-btn\"\n              onClick={() => setModalVisibility(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notes;\n","import localforage from 'localforage';\n\nwindow.localforage = localforage;\n\nconst getAll = async () => {\n  const notes = await localforage.getItem('notes');\n  if (!notes) await localforage.setItem('notes', []);\n  return notes || [];\n};\n\nexport default {\n  async add(note) {\n    const notes = await getAll();\n    const newNote = { ...note, id: Date.now() };\n    localforage.setItem('notes', [...notes, newNote]);\n    return newNote;\n  },\n\n  async getAll() {\n    return await getAll();\n  },\n\n  async delete({ id }) {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.filter(note => note.id !== id)\n    );\n  },\n\n  async update(updatedNote) {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.map(note => {\n        if (note.id === updatedNote.id) return { ...note, ...updatedNote };\n        return note;\n      })\n    );\n  },\n\n  async updateAllAsArchive() {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.map(note => ({ ...note, isArchived: false }))\n    );\n  },\n\n  async deleteArchivedNotes() {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.filter(({ isArchived }) => isArchived)\n    );\n  }\n};\n","import {\n  UPDATE_ALL_NOTES,\n  ADD_NEW_NOTE,\n  UPDATE_NOTE,\n  REMOVE_NOTE,\n  TOGGLE_NOTE,\n  UPDATE_ALL_AS_ARCHIVE\n} from '../utils/constants';\n\nimport API from '../apiCaller';\n\nexport const getAllNotes = () => {\n  return dispatch => {\n    API.getAll().then(notes => {\n      dispatch({\n        type: UPDATE_ALL_NOTES,\n        notes\n      });\n    });\n  };\n};\n\nexport const addNewNote = (\n  title,\n  body,\n  image = '',\n  isStarred = false,\n  isArchived = false\n) => {\n  const note = {\n    isStarred,\n    isArchived,\n    title,\n    body,\n    image\n  };\n\n  return dispatch => {\n    API.add(note).then(note => {\n      dispatch({\n        type: ADD_NEW_NOTE,\n        note\n      });\n    });\n  };\n};\n\nexport const updateNote = note => {\n  return (dispatch, getState) => {\n    API.update(note).then(() => {\n      dispatch({\n        type: UPDATE_NOTE,\n        note\n      });\n    });\n  };\n};\n\nexport const starNote = note => {\n  const updatedNote = { ...note, isStarred: !note.isStarred };\n  return (dispatch, getState) => {\n    API.update(updatedNote).then(() => {\n      dispatch({\n        type: TOGGLE_NOTE,\n        note: updatedNote\n      });\n    });\n  };\n};\n\nexport const toggleNote = note => {\n  const updatedNote = { ...note, isArchived: !note.isArchived };\n  return (dispatch, getState) => {\n    API.update(updatedNote).then(() => {\n      dispatch({\n        type: TOGGLE_NOTE,\n        note: updatedNote\n      });\n    });\n  };\n};\n\nexport const removeNote = note => {\n  return dispatch => {\n    API.delete(note).then(() => {\n      dispatch({\n        type: REMOVE_NOTE,\n        id: note.id\n      });\n    });\n  };\n};\n\nexport const updateAllAsArchive = () => {\n  return dispatch => {\n    API.updateAllAsArchive().then(() => {\n      dispatch({\n        type: UPDATE_ALL_AS_ARCHIVE\n      });\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Notes from '../components/Notes';\n\nimport {\n  toggleNote,\n  removeNote,\n  updateNote,\n  starNote\n} from '../actions/noteAction';\n\nclass NotesContainer extends Component {\n  render() {\n    const { notes, onRemove, onArchive, onUpdate, onStar } = this.props;\n    return (\n      <Notes\n        notes={notes}\n        onRemove={onRemove}\n        onArchive={onArchive}\n        onUpdate={onUpdate}\n        onStar={onStar}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        !note.isArchived &&\n        (note.title\n          .toLowerCase()\n          .includes(filter.noteTitleFilter.toLowerCase()) ||\n          note.body\n            .toLowerCase()\n            .includes(filter.noteTitleFilter.toLowerCase()))\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive(note) {\n    dispatch(toggleNote(note));\n  },\n  onRemove(note) {\n    dispatch(removeNote(note));\n  },\n  onUpdate(note) {\n    dispatch(updateNote(note));\n  },\n  onStar(note) {\n    dispatch(starNote(note));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Notes from '../components/Notes';\n\nimport { toggleNote, removeNote } from '../actions/noteAction';\n\nclass NotesContainer extends Component {\n  render() {\n    const { notes, onRemove, onArchive } = this.props;\n    return <Notes notes={notes} onRemove={onRemove} onArchive={onArchive} />;\n  }\n}\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        note.isArchived &&\n        (note.title\n          .toLowerCase()\n          .includes(filter.noteTitleFilter.toLowerCase()) ||\n          note.body\n            .toLowerCase()\n            .includes(filter.noteTitleFilter.toLowerCase()))\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive(note) {\n    dispatch(toggleNote(note));\n  },\n  onRemove(note) {\n    dispatch(removeNote(note));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\n","import React, { useRef, useEffect } from 'react';\nimport autosize from 'autosize';\n\nconst NewNote = ({ isFocussed, setFocus, noteState, setNoteState, onSave }) => {\n  const contentInput = useRef(null);\n\n  useEffect(() => {\n    if (contentInput && contentInput.current) {\n      contentInput.current.focus();\n      autosize(contentInput.current);\n    }\n  }, []);\n\n  const handleChange = e => {\n    setNoteState({\n      ...noteState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleStar = () => {\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        isStarred: !noteState.isStarred\n      };\n    });\n  };\n\n  const handleArchive = () => {\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        isArchived: !noteState.isArchived\n      };\n    });\n  };\n\n  if (isFocussed) {\n    return (\n      <div className=\"note-add\" onClick={e => e.stopPropagation()}>\n        <div className=\"star-icon icon\" onClick={handleStar}>\n          <i className=\"material-icons\">\n            {noteState.isStarred ? 'star' : 'star_border'}\n          </i>\n        </div>\n        <input\n          onChange={handleChange}\n          value={noteState.title}\n          className=\"note-title-input\"\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n        />\n        <textarea\n          onChange={handleChange}\n          value={noteState.body}\n          name=\"body\"\n          ref={contentInput}\n          rows={1}\n          className=\"note-content-input\"\n          type=\"text\"\n          placeholder=\"Take a note...\"\n        ></textarea>\n        <div className=\"note-add-actions\">\n          <div style={{ display: 'flex' }}>\n            <div className=\"icon\" onClick={handleArchive}>\n              <i\n                className={\n                  noteState.isArchived\n                    ? 'material-icons'\n                    : 'material-icons-outlined'\n                }\n              >\n                archive\n              </i>\n            </div>\n            <div className=\"icon\">\n              <i className=\"material-icons\">add_photo_alternate</i>\n            </div>\n            <div className=\"icon\">\n              <i className=\"material-icons\">color_lens</i>\n            </div>\n          </div>\n          <div style={{ display: 'flex' }}>\n            <button className=\"note-btn\" onClick={onSave}>\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div\n        style={{ display: 'flex' }}\n        className=\"note-add\"\n        onClick={e => e.stopPropagation()}\n      >\n        <div className=\"note-add-unfocussed\" onClick={() => setFocus(true)}>\n          Take a note\n        </div>\n        <div style={{ flex: '1', display: 'flex' }}>\n          <div className=\"icon\">\n            <i className=\"material-icons\">add_photo_alternate</i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default NewNote;\n","import React, { useState } from 'react';\nimport './MainDisplay.css';\nimport NotesContainer from '../containers/NotesContainer';\nimport ArchivedNotesContainer from '../containers/ArchivedNotesContainer';\nimport NewNote from '../components/NewNote';\nimport { DEFAULT_STATE } from '../utils/constants';\n\nconst MainDisplay = ({ selctedIndex, addNewNote }) => {\n  const [isFocussed, setFocus] = useState(false);\n  const [noteState, setNoteState] = useState(DEFAULT_STATE);\n\n  const onSave = () => {\n    let { title, body, isStarred, isArchived } = noteState;\n    if (title !== '' || body !== '') {\n      addNewNote(title, body, '', isStarred, isArchived);\n      setNoteState(DEFAULT_STATE);\n    }\n    setFocus(false);\n  };\n\n  const renderContainer = () => {\n    switch (selctedIndex) {\n      case 0:\n        return <NotesContainer />;\n      case 1:\n        return <ArchivedNotesContainer />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <main className=\"main\" onClick={onSave}>\n      <div className=\"note-add-container\">\n        <NewNote\n          isFocussed={isFocussed}\n          setFocus={setFocus}\n          noteState={noteState}\n          setNoteState={setNoteState}\n          onSave={onSave}\n        />\n      </div>\n      <div className=\"notes-container\">{renderContainer()}</div>\n    </main>\n  );\n};\n\nexport default MainDisplay;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport MainDisplay from '../components/MainDisplay';\n\nimport { addNewNote } from '../actions/noteAction';\n\nclass MainDisplayContainer extends Component {\n  render() {\n    return (\n      <MainDisplay\n        addNewNote={this.props.addNewNote}\n        selctedIndex={this.props.selctedIndex}\n      />\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      addNewNote\n    },\n    dispatch\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(MainDisplayContainer);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport NavBar from './NavBar';\nimport MainDisplayContainer from '../containers/MainDisplayContainer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavbarCollapased: false,\n      selctedIndex: 0\n    };\n  }\n\n  setNavbarCollapse = () => {\n    this.setState(({ isNavbarCollapased }) => {\n      return {\n        isNavbarCollapased: !isNavbarCollapased\n      };\n    });\n  };\n\n  setSelectedIndex = index =>\n    this.setState({\n      selctedIndex: index\n    });\n\n  render() {\n    const { selctedIndex, isNavbarCollapased } = this.state;\n    return (\n      <div className=\"App App-dark\">\n        <Header setNavbarCollapse={this.setNavbarCollapse} />\n        <div style={{ backgroundColor: '#BBB', height: '1px' }}></div>\n        <div className=\"container\">\n          <NavBar\n            selctedIndex={selctedIndex}\n            setSelectedIndex={this.setSelectedIndex}\n            isNavbarCollapased={isNavbarCollapased}\n          />\n          <MainDisplayContainer selctedIndex={selctedIndex} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport notes from './noteReducer';\nimport filter from './filterReducer';\n\nexport default combineReducers({ notes, filter });\n","import {\n  UPDATE_ALL_NOTES,\n  ADD_NEW_NOTE,\n  UPDATE_NOTE,\n  REMOVE_NOTE,\n  TOGGLE_NOTE,\n  UPDATE_ALL_AS_ARCHIVE,\n  UPDATE_ALL_AS_UNARCHIVE\n} from '../utils/constants';\n\nexport default (state = {}, action) => {\n  if (action.type === UPDATE_ALL_NOTES) {\n    return action.notes;\n  }\n\n  if (action.type === ADD_NEW_NOTE) {\n    const { id, isArchived, title, body, image, isStarred } = action.note;\n    return [...state, { id, isArchived, title, body, image, isStarred }];\n  }\n\n  if (action.type === REMOVE_NOTE) {\n    return state.filter(note => note.id !== action.id);\n  }\n\n  if (action.type === UPDATE_NOTE || action.type === TOGGLE_NOTE) {\n    return state.map(note => {\n      if (note.id === action.note.id) return { ...action.note };\n      return note;\n    });\n  }\n\n  if (action.type === UPDATE_ALL_AS_ARCHIVE) {\n    return state.map(note => {\n      return { ...note, isArchived: true };\n    });\n  }\n\n  if (action.type === UPDATE_ALL_AS_UNARCHIVE) {\n    return state.map(note => {\n      return { ...note, isArchived: false };\n    });\n  }\n\n  return state;\n};\n","import { UPDATE_NOTE_TITLE_FILTER } from '../utils/constants';\n\nexport default (state = { noteTitleFilter: '' }, action) => {\n  if (action.type === UPDATE_NOTE_TITLE_FILTER) {\n    return { ...state, noteTitleFilter: action.text };\n  }\n\n  return state;\n};\n","const notes = [];\nconst filter = {\n  noteTitleFilter: ''\n};\n\nexport default {\n  notes,\n  filter\n};\n","import { compose, applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\nimport initialState from './initialState';\n\nimport { getAllNotes } from '../actions/noteAction';\n\nconst middlewares = [thunk];\nconst enhancers = [];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeEnhancers(applyMiddleware(...middlewares), ...enhancers)\n);\n\nstore.dispatch(getAllNotes());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}