{"version":3,"sources":["constants/ThemeConstants.js","contexts/ThemeContext.js","utils/apiCaller.js","components/SearchBox.js","containers/FilterContainer.js","actions/filterAction.js","constants/ActionTypes.js","components/Header.js","components/NavBar.js","constants/DefaultStates.js","components/ColorPicker.js","components/Note.js","components/Modal.js","components/Notes.js","actions/noteAction.js","containers/NotesContainer.js","containers/ArchivedNotesContainer.js","components/NewNote.js","components/MainDisplay.js","containers/MainDisplayContainer.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/noteReducer.js","reducers/filterReducer.js","store/initialState.js","store/index.js","index.js"],"names":["DARK_THEME","LIGHT_COLORS","DARK_COLORS","ThemeContext","React","createContext","theme","toggleTheme","window","localforage","getAll","a","async","getItem","notes","setItem","note","newNote","id","Date","now","filter","updatedNote","map","filterValue","modalVisibility","selectedNote","SearchBox","updateFilter","value","searchInput","useRef","useState","setFilterValue","handleFilterChange","e","currentTarget","useEffect","API","then","res","Consumer","className","onClick","current","focus","ref","placeholder","type","onChange","connect","title","toLowerCase","includes","noteTitleFilter","body","dispatch","text","props","style","width","Header","setNavbarCollapse","MAIN_LIST","icon","NavBar","isNavbarCollapased","selctedIndex","setSelectedIndex","renderListItem","index","key","DEFAULT_STATE","image","backgroundColor","isArchived","isStarred","ColorPicker","colors","selectedIndex","handleBackgroundColor","setColorPickerVisibility","position","onMouseEnter","onMouseLeave","color","opacity","stopPropagation","alignSelf","Note","onRemove","onArchive","onStar","onUpdate","setModalVisibility","setSelectedNote","dimensions","colorIndex","indexOf","showActions","setShowActions","colorPickerVisibility","noteRef","gridRowEnd","setGridRowEnd","rowSpan","Math","ceil","querySelector","getBoundingClientRect","height","rowGap","rowHeight","onNoteSelect","handleArchive","handleRemove","handleStar","onMouseOver","alt","src","onMouseOut","Modal","onNoteChange","contentInput","autosize","name","rows","Notes","tagVisibility","setTagVisibility","setDimensions","gridNote","resizeGridItem","item","length","parseInt","getComputedStyle","getPropertyValue","marginBottom","marginTop","addNewNote","updateNote","getState","starNote","toggleNote","removeNote","NewNote","isFocussed","setFocus","noteState","setNoteState","onSave","imageInputVisibility","setImageInputVisibility","handleChange","target","handleAttachPicture","handleClearImage","display","flex","MainDisplay","ArchivedNotesContainer","renderContainer","bindActionCreators","App","setState","innerWidth","state","this","Provider","Component","Boolean","location","hostname","match","combineReducers","action","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","initialState","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6a159cb.chunk.js","sourcesContent":["export const LIGHT_THEME = 'LIGHT_THEME';\nexport const DARK_THEME = 'DARK_THEME';\n\nexport const LIGHT_COLOR = '#ececec';\n\nexport const LIGHT_COLORS = [\n  '#ececec',\n  '#880e4f',\n  '#4a148c',\n  '#1a237e',\n  '#1b5e20',\n  '#bf360c'\n];\n\nexport const DARK_COLORS = [\n  '#282c34',\n  '#880e4f',\n  '#4a148c',\n  '#1a237e',\n  '#1b5e20',\n  '#bf360c'\n];\n","import React from 'react';\nimport { LIGHT_THEME } from '../constants/ThemeConstants';\n\nconst ThemeContext = React.createContext({\n  theme: LIGHT_THEME,\n  toggleTheme: () => {}\n});\n\nexport default ThemeContext;\n","import localforage from 'localforage';\n\nwindow.localforage = localforage;\n\nconst getAll = async () => {\n  const notes = await localforage.getItem('notes');\n  if (!notes) await localforage.setItem('notes', []);\n  return notes || [];\n};\n\nexport default {\n  async add(note) {\n    const notes = await getAll();\n    const newNote = { ...note, id: Date.now() };\n    localforage.setItem('notes', [...notes, newNote]);\n    return newNote;\n  },\n\n  async getAll() {\n    return await getAll();\n  },\n\n  async delete({ id }) {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.filter(note => note.id !== id)\n    );\n  },\n\n  async update(updatedNote) {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.map(note => {\n        if (note.id === updatedNote.id) return { ...note, ...updatedNote };\n        return note;\n      })\n    );\n  },\n\n  async updateAllAsArchive() {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.map(note => ({ ...note, isArchived: false }))\n    );\n  },\n\n  async deleteArchivedNotes() {\n    const notes = await getAll();\n    localforage.setItem(\n      'notes',\n      notes.filter(({ isArchived }) => isArchived)\n    );\n  },\n\n  async getNoteFilter() {\n    return await localforage.getItem('filter');\n  },\n\n  async updateNoteFilter(filterValue) {\n    return await localforage.setItem('filter', filterValue);\n  },\n\n  async getSelectedNoteInfo() {\n    return await localforage.getItem('selectionInfo');\n  },\n\n  async setSelectedNoteInfo(modalVisibility, selectedNote) {\n    return await localforage.setItem('selectionInfo', {\n      modalVisibility,\n      selectedNote\n    });\n  }\n};\n","import React, { useRef, useEffect, useState } from 'react';\nimport './SearchBox.css';\nimport ThemeContext from '../contexts/ThemeContext';\nimport { DARK_THEME } from '../constants/ThemeConstants';\nimport API from '../utils/apiCaller';\n\nconst SearchBox = ({ updateFilter, value }) => {\n  const searchInput = useRef(null);\n  const [filterValue, setFilterValue] = useState(value);\n\n  const handleFilterChange = e => {\n    setFilterValue(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    API.getNoteFilter().then(res => {\n      if (res) {\n        setFilterValue(res);\n        updateFilter(res);\n      }\n    });\n  }, [setFilterValue, updateFilter]);\n\n  useEffect(() => {\n    API.updateNoteFilter(filterValue).then(() => {\n      updateFilter(filterValue);\n    });\n  }, [filterValue, updateFilter]);\n\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div\n          className={\n            theme === DARK_THEME\n              ? 'search-component search-component-dark'\n              : 'search-component search-component-light'\n          }\n        >\n          <i\n            className={\n              theme === DARK_THEME\n                ? 'icon material-icons search-icon'\n                : 'icon icon-light material-icons search-icon'\n            }\n            onClick={() => searchInput.current.focus()}\n          >\n            search\n          </i>\n          <input\n            ref={searchInput}\n            placeholder=\"Search\"\n            className={\n              theme === DARK_THEME\n                ? 'search-input'\n                : 'search-input search-input-light'\n            }\n            type=\"text\"\n            onChange={handleFilterChange}\n            value={filterValue}\n          />\n          <i\n            className={\n              theme === DARK_THEME\n                ? 'icon material-icons search-icon'\n                : 'icon icon-light material-icons search-icon'\n            }\n            onClick={() => {\n              updateFilter('');\n              setFilterValue('');\n            }}\n          >\n            close\n          </i>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/SearchBox';\n\nimport { updateNoteTitleFilter } from '../actions/filterAction';\n\nconst FilterContainer = props => {\n  return (\n    <div style={{ width: '80%' }}>\n      <SearchBox {...props} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        note.title.toLowerCase().includes(filter.noteTitleFilter) ||\n        note.body.toLowerCase().includes(filter.noteTitleFilter)\n    ),\n    value: filter.noteTitleFilter\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter(value) {\n    dispatch(updateNoteTitleFilter(value));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\n","import { UPDATE_NOTE_TITLE_FILTER } from '../constants/ActionTypes';\n\nexport const updateNoteTitleFilter = text => ({\n  type: UPDATE_NOTE_TITLE_FILTER,\n  text\n});\n","export const UPDATE_NOTE_TITLE_FILTER = 'UPDATE_NOTE_TITLE_FILTER';\n\nexport const UPDATE_NEW_NOTE_VALUE = 'UPDATE_NEW_NOTE_VALUE';\n\nexport const ADD_NEW_NOTE = 'ADD_NEW_NOTE';\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\nexport const TOGGLE_NOTE = 'TOGGLE_NOTE';\nexport const UPDATE_ALL_AS_ARCHIVE = 'UPDATE_ALL_AS_ARCHIVE';\nexport const UPDATE_ALL_AS_UNARCHIVE = 'UPDATE_ALL_AS_UNARCHIVE';\n\nexport const UPDATE_ALL_NOTES = 'UPDATE_ALL_NOTES';\n","import React from 'react';\nimport './Header.css';\nimport FilterContainer from '../containers/FilterContainer';\nimport ThemeContext from '../contexts/ThemeContext';\nimport { DARK_THEME } from '../constants/ThemeConstants';\n\nfunction Header({ setNavbarCollapse }) {\n  return (\n    <ThemeContext.Consumer>\n      {({ toggleTheme, theme }) => (\n        <header className=\"header\">\n          <div className=\"navbar-icon\">\n            <div\n              className={theme === DARK_THEME ? 'icon' : 'icon icon-light'}\n              onClick={setNavbarCollapse}\n            >\n              <i className=\"material-icons hamburger\">menu</i>\n            </div>\n            <div className=\"icon-title\">Google Keep</div>\n          </div>\n          <div className=\"search-box\">\n            <FilterContainer />\n          </div>\n          <div className=\"action-area\">\n            <div\n              className={theme === DARK_THEME ? 'icon' : 'icon icon-light'}\n              onClick={toggleTheme}\n            >\n              <i className=\"material-icons hamburger\">\n                {theme === DARK_THEME ? 'wb_sunny' : 'brightness_2'}\n              </i>\n            </div>\n          </div>\n        </header>\n      )}\n    </ThemeContext.Consumer>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './NavBar.css';\nimport { LIGHT_THEME } from '../constants/ThemeConstants';\n\nconst MAIN_LIST = [\n  {\n    title: 'Notes',\n    icon: 'note'\n  },\n  {\n    title: 'Archive',\n    icon: 'archive'\n  }\n];\n\nconst NavBar = ({\n  isNavbarCollapased,\n  selctedIndex,\n  setSelectedIndex,\n  theme\n}) => {\n  const renderListItem = MAIN_LIST.map(({ icon, title }, index) => {\n    return (\n      <div\n        key={title}\n        className={\n          selctedIndex === index ? 'list-item list-item-active' : 'list-item'\n        }\n        onClick={() => setSelectedIndex(index)}\n      >\n        <i className=\"material-icons list-icon\">{icon}</i>\n        <div className=\"list-title\">{title}</div>\n      </div>\n    );\n  });\n\n  let className = '';\n  if (isNavbarCollapased) {\n    className = 'navbar navbar-hidden';\n  } else {\n    className = 'navbar';\n  }\n\n  if (theme === LIGHT_THEME) {\n    className += ' navbar-light';\n  }\n\n  return (\n    <nav className={className}>\n      {renderListItem}\n      <div className=\"separator\"></div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","export const DEFAULT_STATE = {\n  title: '',\n  body: '',\n  image: '',\n  backgroundColor: '',\n  isArchived: false,\n  isStarred: false\n};\n","import React from 'react';\nimport './ColorPicker.css';\n\nconst ColorPicker = ({\n  colors,\n  selectedIndex,\n  handleBackgroundColor,\n  setColorPickerVisibility,\n  position\n}) => {\n  return (\n    <div\n      className=\"color-container\"\n      style={{\n        [position.key]: position.value\n      }}\n      onMouseEnter={() => setColorPickerVisibility(true)}\n      onMouseLeave={() => setColorPickerVisibility(false)}\n    >\n      {colors.map((color, index) => (\n        <div\n          key={color}\n          className=\"color\"\n          style={{\n            backgroundColor: `${color}`,\n            opacity: index === selectedIndex ? 0.4 : 1\n          }}\n          onClick={e => {\n            e.stopPropagation();\n            handleBackgroundColor(index, color);\n          }}\n        >\n          {index === selectedIndex && (\n            <i style={{ alignSelf: 'center' }} className=\"material-icons\">\n              check\n            </i>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React, { useState, useRef, useEffect } from 'react';\nimport './Note.css';\nimport ThemeContext from '../contexts/ThemeContext';\nimport {\n  DARK_THEME,\n  LIGHT_THEME,\n  DARK_COLORS,\n  LIGHT_COLORS\n} from '../constants/ThemeConstants';\nimport ColorPicker from './ColorPicker';\n\nconst Note = ({\n  note,\n  onRemove,\n  onArchive,\n  onStar,\n  onUpdate,\n  setModalVisibility,\n  setSelectedNote,\n  dimensions\n}) => {\n  const colorIndex = DARK_COLORS.indexOf(note.backgroundColor);\n  const [showActions, setShowActions] = useState(false);\n  const [colorPickerVisibility, setColorPickerVisibility] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(\n    colorIndex === -1 ? 0 : colorIndex\n  );\n  const noteRef = useRef(null);\n  const [gridRowEnd, setGridRowEnd] = useState(1);\n\n  useEffect(() => {\n    let rowSpan = Math.ceil(\n      (noteRef.current.querySelector('.note-inner').getBoundingClientRect()\n        .height +\n        dimensions.rowGap) /\n        (dimensions.rowHeight + dimensions.rowGap)\n    );\n    setGridRowEnd(rowSpan);\n  }, [dimensions]);\n\n  const onNoteSelect = e => {\n    e.stopPropagation();\n    setModalVisibility(true);\n    setSelectedNote(note);\n  };\n\n  const handleArchive = e => {\n    e.stopPropagation();\n    onArchive(note);\n  };\n\n  const handleRemove = e => {\n    e.stopPropagation();\n    onRemove(note);\n  };\n\n  const handleStar = e => {\n    e.stopPropagation();\n    onStar(note);\n  };\n\n  const handleBackgroundColor = (index, color) => {\n    setSelectedIndex(index);\n    let updatedNote = {\n      ...note,\n      backgroundColor: color\n    };\n    onUpdate(updatedNote);\n  };\n\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div ref={noteRef} style={{ gridRowEnd: `span ${gridRowEnd}` }}>\n          <div\n            className=\"note-inner\"\n            onMouseOver={() => setShowActions(true)}\n            onMouseEnter={() => setShowActions(true)}\n            onMouseLeave={() => setShowActions(false)}\n            onClick={onNoteSelect}\n            style={{\n              position: 'relative',\n              backgroundColor: `${note.backgroundColor}`,\n              color:\n                theme === LIGHT_THEME && note.backgroundColor === ''\n                  ? '#000000'\n                  : '#eeeeee'\n            }}\n          >\n            {colorPickerVisibility && (\n              <ColorPicker\n                colors={theme === DARK_THEME ? DARK_COLORS : LIGHT_COLORS}\n                selectedIndex={selectedIndex}\n                handleBackgroundColor={handleBackgroundColor}\n                setColorPickerVisibility={setColorPickerVisibility}\n                position={{ key: 'right', value: '16px' }}\n              />\n            )}\n            {showActions && (\n              <div\n                className={\n                  theme === DARK_THEME\n                    ? 'star-icon-action icon'\n                    : 'star-icon-action icon icon-light'\n                }\n                onClick={handleStar}\n              >\n                <i className=\"material-icons md-18\">\n                  {note.isStarred ? 'star' : 'star_border'}\n                </i>\n              </div>\n            )}\n            <div className=\"note-title\">{note.title}</div>\n            <div className=\"note-content\">{note.body}</div>\n            {note.image !== '' && (\n              <div className=\"note-image-container\">\n                <img\n                  className=\"note-image\"\n                  alt=\"invalid_img_url\"\n                  src={note.image}\n                />\n              </div>\n            )}\n            <div className=\"note-actions\">\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                  onClick={handleArchive}\n                >\n                  <i\n                    className={\n                      note.isArchived\n                        ? 'material-icons md-18'\n                        : 'material-icons-outlined  md-18'\n                    }\n                  >\n                    archive\n                  </i>\n                </div>\n              )}\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                >\n                  <i className=\"material-icons md-18\">add_photo_alternate</i>\n                </div>\n              )}\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                  onMouseOver={() => setColorPickerVisibility(true)}\n                  onMouseOut={() => setColorPickerVisibility(false)}\n                >\n                  <i className=\"material-icons md-18\">color_lens</i>\n                </div>\n              )}\n              {showActions && (\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'note-action icon'\n                      : 'note-action icon icon-light'\n                  }\n                  onClick={handleRemove}\n                >\n                  <i className=\"material-icons md-18\">delete</i>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default Note;\n","import React, { useRef, useEffect } from 'react';\nimport autosize from 'autosize';\nimport { DARK_THEME } from '../constants/ThemeConstants';\n\nconst Modal = ({\n  modalVisibility,\n  setModalVisibility,\n  onNoteChange,\n  selectedNote,\n  theme\n}) => {\n  const contentInput = useRef(null);\n\n  useEffect(() => {\n    contentInput.current.focus();\n    autosize(contentInput.current);\n  }, []);\n\n  return (\n    <div className={modalVisibility ? 'modale opened' : 'modale'}>\n      <div\n        className={\n          theme === DARK_THEME\n            ? 'modal-dialog'\n            : 'modal-dialog modal-dialog-light'\n        }\n      >\n        <div className=\"modal-content\">\n          <input\n            onChange={onNoteChange}\n            value={selectedNote.title}\n            className={\n              theme === DARK_THEME\n                ? 'note-title-input'\n                : 'note-title-input note-title-input-light'\n            }\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n          />\n          <textarea\n            onChange={onNoteChange}\n            value={selectedNote.body}\n            name=\"body\"\n            ref={contentInput}\n            rows={1}\n            className={\n              theme === DARK_THEME\n                ? 'note-content-input'\n                : 'note-content-input note-content-input-light'\n            }\n            type=\"text\"\n            placeholder=\"Take a note...\"\n          ></textarea>\n          <input\n            onChange={onNoteChange}\n            value={selectedNote.image}\n            className={\n              theme === DARK_THEME\n                ? 'note-title-input'\n                : 'note-title-input note-title-input-light'\n            }\n            type=\"text\"\n            name=\"image\"\n            placeholder=\"Paste your image url here\"\n          />\n          <button\n            className={\n              theme === DARK_THEME\n                ? 'modal-btn note-btn'\n                : 'modal-btn note-btn note-btn-light'\n            }\n            onClick={() => setModalVisibility(false)}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { DEFAULT_STATE } from '../constants/DefaultStates';\nimport Note from './Note';\nimport Modal from './Modal';\nimport ThemeContext from '../contexts/ThemeContext';\nimport API from '../utils/apiCaller';\n\nconst Notes = ({ notes, onRemove, onArchive, onUpdate, onStar }) => {\n  const [selectedNote, setSelectedNote] = useState(DEFAULT_STATE);\n  const [modalVisibility, setModalVisibility] = useState(false);\n  const [tagVisibility, setTagVisibility] = useState(false);\n  const [dimensions, setDimensions] = useState({ rowHeight: 0, rowGap: 0 });\n  const gridNote = useRef(null);\n\n  useEffect(() => {\n    API.getSelectedNoteInfo().then(res => {\n      if (res && res.modalVisibility && res.selectedNote) {\n        setModalVisibility(true);\n        setSelectedNote(res.selectedNote);\n      }\n    });\n    resizeGridItem();\n  }, []);\n\n  useEffect(() => {\n    API.setSelectedNoteInfo(modalVisibility, selectedNote);\n  }, [modalVisibility, selectedNote]);\n\n  useEffect(() => {\n    if (\n      notes.filter(item => item.isStarred).length > 0 &&\n      notes.filter(item => !item.isStarred).length > 0\n    ) {\n      setTagVisibility(true);\n    } else {\n      setTagVisibility(false);\n    }\n  }, [notes]);\n\n  const resizeGridItem = () => {\n    const rowHeight = parseInt(\n      window\n        .getComputedStyle(gridNote.current)\n        .getPropertyValue('grid-auto-rows')\n    );\n    const rowGap = parseInt(\n      window.getComputedStyle(gridNote.current).getPropertyValue('grid-row-gap')\n    );\n    setDimensions({ rowGap, rowHeight });\n  };\n\n  const onNoteChange = e => {\n    let note = {\n      ...selectedNote,\n      [e.currentTarget.name]: e.currentTarget.value\n    };\n    setSelectedNote(note);\n    onUpdate(note);\n  };\n\n  const renderNotePlaceholder = () => (\n    <div className=\"placeholder-note\">\n      <i className=\"material-icons-outlined md-96 placeholder-icon\">note</i>\n      <div className=\"placeholder-title\">Your notes will appear here</div>\n    </div>\n  );\n\n  return (\n    <ThemeContext.Consumer>\n      {({ theme }) => (\n        <div>\n          {tagVisibility && (\n            <div style={{ marginBottom: '8px' }} className=\"note-tag\">\n              STARRED\n            </div>\n          )}\n          <div className=\"notes-grid\">\n            {notes\n              .filter(item => item.isStarred)\n              .map(item => {\n                return (\n                  <Note\n                    dimensions={dimensions}\n                    key={item.id}\n                    note={item}\n                    onRemove={onRemove}\n                    onArchive={onArchive}\n                    onStar={onStar}\n                    onUpdate={onUpdate}\n                    setModalVisibility={setModalVisibility}\n                    setSelectedNote={setSelectedNote}\n                  />\n                );\n              })}\n          </div>\n          {tagVisibility && (\n            <div\n              style={{ marginTop: '16px', marginBottom: '8px' }}\n              className=\"note-tag\"\n            >\n              OTHERS\n            </div>\n          )}\n          <div ref={gridNote} className=\"notes-grid\">\n            {notes\n              .filter(item => !item.isStarred)\n              .map(item => {\n                return (\n                  <Note\n                    dimensions={dimensions}\n                    key={item.id}\n                    note={item}\n                    onRemove={onRemove}\n                    onArchive={onArchive}\n                    onStar={onStar}\n                    onUpdate={onUpdate}\n                    setModalVisibility={setModalVisibility}\n                    setSelectedNote={setSelectedNote}\n                  />\n                );\n              })}\n          </div>\n          <div>{notes.length === 0 && renderNotePlaceholder()}</div>\n\n          <Modal\n            modalVisibility={modalVisibility}\n            setModalVisibility={setModalVisibility}\n            onNoteChange={onNoteChange}\n            selectedNote={selectedNote}\n            theme={theme}\n          />\n        </div>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default Notes;\n","import {\n  UPDATE_ALL_NOTES,\n  ADD_NEW_NOTE,\n  UPDATE_NOTE,\n  REMOVE_NOTE,\n  TOGGLE_NOTE,\n  UPDATE_ALL_AS_ARCHIVE\n} from '../constants/ActionTypes';\n\nimport API from '../utils/apiCaller';\n\nexport const getAllNotes = () => {\n  return dispatch => {\n    API.getAll().then(notes => {\n      dispatch({\n        type: UPDATE_ALL_NOTES,\n        notes\n      });\n    });\n  };\n};\n\nexport const addNewNote = (\n  title,\n  body,\n  image = '',\n  backgroundColor = '',\n  isStarred = false,\n  isArchived = false\n) => {\n  const note = {\n    isStarred,\n    isArchived,\n    title,\n    body,\n    image,\n    backgroundColor\n  };\n\n  return dispatch => {\n    API.add(note).then(note => {\n      dispatch({\n        type: ADD_NEW_NOTE,\n        note\n      });\n    });\n  };\n};\n\nexport const updateNote = note => {\n  return (dispatch, getState) => {\n    API.update(note).then(() => {\n      dispatch({\n        type: UPDATE_NOTE,\n        note\n      });\n    });\n  };\n};\n\nexport const starNote = note => {\n  const updatedNote = { ...note, isStarred: !note.isStarred };\n  return (dispatch, getState) => {\n    API.update(updatedNote).then(() => {\n      dispatch({\n        type: TOGGLE_NOTE,\n        note: updatedNote\n      });\n    });\n  };\n};\n\nexport const toggleNote = note => {\n  const updatedNote = { ...note, isArchived: !note.isArchived };\n  return (dispatch, getState) => {\n    API.update(updatedNote).then(() => {\n      dispatch({\n        type: TOGGLE_NOTE,\n        note: updatedNote\n      });\n    });\n  };\n};\n\nexport const removeNote = note => {\n  return dispatch => {\n    API.delete(note).then(() => {\n      dispatch({\n        type: REMOVE_NOTE,\n        id: note.id\n      });\n    });\n  };\n};\n\nexport const updateAllAsArchive = () => {\n  return dispatch => {\n    API.updateAllAsArchive().then(() => {\n      dispatch({\n        type: UPDATE_ALL_AS_ARCHIVE\n      });\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Notes from '../components/Notes';\n\nimport {\n  toggleNote,\n  removeNote,\n  updateNote,\n  starNote\n} from '../actions/noteAction';\n\nconst NotesContainer = ({ notes, onRemove, onArchive, onUpdate, onStar }) => {\n  return (\n    <Notes\n      notes={notes}\n      onRemove={onRemove}\n      onArchive={onArchive}\n      onUpdate={onUpdate}\n      onStar={onStar}\n    />\n  );\n};\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        !note.isArchived &&\n        (note.title\n          .toLowerCase()\n          .includes(filter.noteTitleFilter.toLowerCase()) ||\n          note.body\n            .toLowerCase()\n            .includes(filter.noteTitleFilter.toLowerCase()))\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive(note) {\n    dispatch(toggleNote(note));\n  },\n  onRemove(note) {\n    dispatch(removeNote(note));\n  },\n  onUpdate(note) {\n    dispatch(updateNote(note));\n  },\n  onStar(note) {\n    dispatch(starNote(note));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Notes from '../components/Notes';\n\nimport {\n  toggleNote,\n  removeNote,\n  updateNote,\n  starNote\n} from '../actions/noteAction';\n\nconst NotesContainer = ({ notes, onRemove, onArchive, onUpdate, onStar }) => {\n  return (\n    <Notes\n      notes={notes}\n      onRemove={onRemove}\n      onArchive={onArchive}\n      onUpdate={onUpdate}\n      onStar={onStar}\n    />\n  );\n};\n\nconst mapStateToProps = ({ notes, filter }) => {\n  return {\n    notes: notes.filter(\n      note =>\n        note.isArchived &&\n        (note.title\n          .toLowerCase()\n          .includes(filter.noteTitleFilter.toLowerCase()) ||\n          note.body\n            .toLowerCase()\n            .includes(filter.noteTitleFilter.toLowerCase()))\n    )\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onArchive(note) {\n    dispatch(toggleNote(note));\n  },\n  onRemove(note) {\n    dispatch(removeNote(note));\n  },\n  onUpdate(note) {\n    dispatch(updateNote(note));\n  },\n  onStar(note) {\n    dispatch(starNote(note));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\n","import React, { useRef, useEffect, useState } from 'react';\nimport autosize from 'autosize';\nimport ThemeContext from '../contexts/ThemeContext';\nimport {\n  DARK_THEME,\n  DARK_COLORS,\n  LIGHT_COLORS,\n  LIGHT_THEME\n} from '../constants/ThemeConstants';\nimport ColorPicker from './ColorPicker';\n\nconst NewNote = ({ isFocussed, setFocus, noteState, setNoteState, onSave }) => {\n  const contentInput = useRef(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [colorPickerVisibility, setColorPickerVisibility] = useState(false);\n  const [imageInputVisibility, setImageInputVisibility] = useState(false);\n\n  useEffect(() => {\n    if (contentInput && contentInput.current) {\n      contentInput.current.focus();\n      autosize(contentInput.current);\n    }\n  }, []);\n\n  const handleChange = e => {\n    setNoteState({\n      ...noteState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleStar = () => {\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        isStarred: !noteState.isStarred\n      };\n    });\n  };\n\n  const handleArchive = () => {\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        isArchived: !noteState.isArchived\n      };\n    });\n  };\n\n  const handleBackgroundColor = (index, color) => {\n    setSelectedIndex(index);\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        backgroundColor: color\n      };\n    });\n  };\n\n  const handleAttachPicture = () => {\n    setImageInputVisibility(imageInputVisibility => !imageInputVisibility);\n  };\n\n  const handleClearImage = () => {\n    setImageInputVisibility(false);\n    setNoteState(noteState => {\n      return {\n        ...noteState,\n        image: ''\n      };\n    });\n  };\n\n  if (isFocussed) {\n    return (\n      <ThemeContext.Consumer>\n        {({ theme }) => (\n          <div\n            className=\"note-add\"\n            style={{\n              position: 'relative',\n              backgroundColor:\n                theme === DARK_THEME\n                  ? `${DARK_COLORS[selectedIndex]}`\n                  : `${LIGHT_COLORS[selectedIndex]}`\n            }}\n            onClick={e => e.stopPropagation()}\n          >\n            {colorPickerVisibility && (\n              <ColorPicker\n                colors={theme === DARK_THEME ? DARK_COLORS : LIGHT_COLORS}\n                selectedIndex={selectedIndex}\n                handleBackgroundColor={handleBackgroundColor}\n                setColorPickerVisibility={setColorPickerVisibility}\n                position={{ key: 'left', value: '16px' }}\n              />\n            )}\n            <div\n              className={\n                theme === LIGHT_THEME && selectedIndex === 0\n                  ? 'star-icon icon icon-light'\n                  : 'star-icon icon material-icon-white'\n              }\n              onClick={handleStar}\n            >\n              <i className=\"material-icons\">\n                {noteState.isStarred ? 'star' : 'star_border'}\n              </i>\n            </div>\n            <input\n              onChange={handleChange}\n              value={noteState.title}\n              className={\n                theme === LIGHT_THEME && selectedIndex === 0\n                  ? 'note-title-input note-title-input-light'\n                  : 'note-title-input'\n              }\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n            <textarea\n              onChange={handleChange}\n              value={noteState.body}\n              name=\"body\"\n              ref={contentInput}\n              rows={1}\n              className={\n                theme === LIGHT_THEME && selectedIndex === 0\n                  ? 'note-content-input note-content-input-light'\n                  : 'note-content-input'\n              }\n              type=\"text\"\n              placeholder=\"Take a note...\"\n            ></textarea>\n            {imageInputVisibility && (\n              <input\n                onChange={handleChange}\n                value={noteState.image}\n                className={\n                  theme === LIGHT_THEME && selectedIndex === 0\n                    ? 'note-title-input note-title-input-light'\n                    : 'note-title-input'\n                }\n                type=\"text\"\n                name=\"image\"\n                placeholder=\"Paste your image url here\"\n              />\n            )}\n            {noteState.image !== '' && (\n              <div className=\"note-image-container\">\n                <div\n                  className={\n                    theme === DARK_THEME\n                      ? 'icon note-image-remove'\n                      : 'icon icon-light note-image-remove'\n                  }\n                  onClick={handleClearImage}\n                >\n                  <i className=\"material-icons\">clear</i>\n                </div>\n                <img\n                  className=\"note-image\"\n                  alt=\"invalid_img_url\"\n                  src={noteState.image}\n                />\n              </div>\n            )}\n            <div className=\"note-add-actions\">\n              <div style={{ display: 'flex' }}>\n                <div\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'icon  icon-light'\n                      : 'icon material-icon-white'\n                  }\n                  onClick={handleArchive}\n                >\n                  <i\n                    className={\n                      noteState.isArchived\n                        ? 'material-icons'\n                        : 'material-icons-outlined'\n                    }\n                  >\n                    archive\n                  </i>\n                </div>\n                <div\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'icon  icon-light'\n                      : 'icon material-icon-white'\n                  }\n                  onClick={handleAttachPicture}\n                >\n                  <i\n                    className={\n                      noteState.isArchived\n                        ? 'material-icons'\n                        : 'material-icons-outlined'\n                    }\n                  >\n                    add_photo_alternate\n                  </i>\n                </div>\n                <div\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'icon  icon-light'\n                      : 'icon material-icon-white'\n                  }\n                  onMouseOver={() => setColorPickerVisibility(true)}\n                  onMouseOut={() => setColorPickerVisibility(false)}\n                >\n                  <i className=\"material-icons\">color_lens</i>\n                </div>\n              </div>\n              <div style={{ display: 'flex' }}>\n                <button\n                  className={\n                    theme === LIGHT_THEME && selectedIndex === 0\n                      ? 'note-btn note-btn-light'\n                      : 'note-btn'\n                  }\n                  onClick={() => {\n                    onSave();\n                    setSelectedIndex(0);\n                    setImageInputVisibility(false);\n                  }}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  } else {\n    return (\n      <ThemeContext.Consumer>\n        {({ theme }) => (\n          <div\n            style={{ display: 'flex' }}\n            className=\"note-add\"\n            onClick={e => e.stopPropagation()}\n          >\n            <div className=\"note-add-unfocussed\" onClick={() => setFocus(true)}>\n              Take a note\n            </div>\n            <div style={{ flex: '1', display: 'flex' }}>\n              <div\n                className={theme === DARK_THEME ? 'icon' : 'icon icon-light'}\n                onClick={() => {\n                  setFocus(true);\n                  setImageInputVisibility(true);\n                }}\n              >\n                <i className=\"material-icons\">add_photo_alternate</i>\n              </div>\n            </div>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n};\n\nexport default NewNote;\n","import React, { useState } from 'react';\nimport './MainDisplay.css';\nimport NotesContainer from '../containers/NotesContainer';\nimport ArchivedNotesContainer from '../containers/ArchivedNotesContainer';\nimport NewNote from '../components/NewNote';\nimport { DEFAULT_STATE } from '../constants/DefaultStates';\n\nconst MainDisplay = ({ selctedIndex, addNewNote }) => {\n  const [isFocussed, setFocus] = useState(false);\n  const [noteState, setNoteState] = useState(DEFAULT_STATE);\n\n  const onSave = () => {\n    let {\n      title,\n      body,\n      isStarred,\n      isArchived,\n      backgroundColor,\n      image\n    } = noteState;\n    if (title !== '' || body !== '') {\n      addNewNote(title, body, image, backgroundColor, isStarred, isArchived);\n      setNoteState(DEFAULT_STATE);\n    }\n    setFocus(false);\n  };\n\n  const renderContainer = () => {\n    switch (selctedIndex) {\n      case 0:\n        return <NotesContainer />;\n      case 1:\n        return <ArchivedNotesContainer />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <main className=\"main\" onClick={onSave}>\n      {selctedIndex === 0 && (\n        <div className=\"note-add-container\">\n          <NewNote\n            isFocussed={isFocussed}\n            setFocus={setFocus}\n            noteState={noteState}\n            setNoteState={setNoteState}\n            onSave={onSave}\n          />\n        </div>\n      )}\n      <div className=\"notes-container\">{renderContainer()}</div>\n    </main>\n  );\n};\n\nexport default MainDisplay;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport MainDisplay from '../components/MainDisplay';\n\nimport { addNewNote } from '../actions/noteAction';\n\nconst MainDisplayContainer = ({ addNewNote, selctedIndex }) => {\n  return <MainDisplay addNewNote={addNewNote} selctedIndex={selctedIndex} />;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      addNewNote\n    },\n    dispatch\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(MainDisplayContainer);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport NavBar from './NavBar';\nimport MainDisplayContainer from '../containers/MainDisplayContainer';\nimport ThemeContext from '../contexts/ThemeContext';\nimport { LIGHT_THEME, DARK_THEME } from '../constants/ThemeConstants';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavbarCollapased: window.innerWidth < 775 ? true : false,\n      selctedIndex: 0,\n      theme: DARK_THEME,\n      toggleTheme: this.toggleTheme\n    };\n  }\n\n  setNavbarCollapse = () =>\n    this.setState(({ isNavbarCollapased }) => {\n      return {\n        isNavbarCollapased: !isNavbarCollapased\n      };\n    });\n\n  setSelectedIndex = index => {\n    this.setState(({ isNavbarCollapased }) => ({\n      isNavbarCollapased:\n        window.innerWidth < 775 ? !isNavbarCollapased : isNavbarCollapased,\n      selctedIndex: index\n    }));\n  };\n\n  toggleTheme = () =>\n    this.setState(({ theme }) => ({\n      theme: theme === DARK_THEME ? LIGHT_THEME : DARK_THEME\n    }));\n\n  render() {\n    const { selctedIndex, isNavbarCollapased, theme } = this.state;\n    return (\n      <ThemeContext.Provider\n        value={{ theme: this.state.theme, toggleTheme: this.state.toggleTheme }}\n      >\n        <div\n          className={theme === DARK_THEME ? 'App App-dark' : 'App App-light'}\n        >\n          <Header setNavbarCollapse={this.setNavbarCollapse} />\n          <div className=\"separator\"></div>\n          <div className=\"container\">\n            <NavBar\n              theme={theme}\n              selctedIndex={selctedIndex}\n              setSelectedIndex={this.setSelectedIndex}\n              isNavbarCollapased={isNavbarCollapased}\n            />\n            <MainDisplayContainer selctedIndex={selctedIndex} />\n          </div>\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport notes from './noteReducer';\nimport filter from './filterReducer';\n\nexport default combineReducers({ notes, filter });\n","import {\n  UPDATE_ALL_NOTES,\n  ADD_NEW_NOTE,\n  UPDATE_NOTE,\n  REMOVE_NOTE,\n  TOGGLE_NOTE,\n  UPDATE_ALL_AS_ARCHIVE,\n  UPDATE_ALL_AS_UNARCHIVE\n} from '../constants/ActionTypes';\n\nexport default (state = {}, action) => {\n  if (action.type === UPDATE_ALL_NOTES) {\n    return action.notes;\n  }\n\n  if (action.type === ADD_NEW_NOTE) {\n    const {\n      id,\n      isArchived,\n      title,\n      body,\n      image,\n      isStarred,\n      backgroundColor\n    } = action.note;\n    return [\n      ...state,\n      { id, isArchived, title, body, image, isStarred, backgroundColor }\n    ];\n  }\n\n  if (action.type === REMOVE_NOTE) {\n    return state.filter(note => note.id !== action.id);\n  }\n\n  if (action.type === UPDATE_NOTE || action.type === TOGGLE_NOTE) {\n    return state.map(note => {\n      if (note.id === action.note.id) return { ...action.note };\n      return note;\n    });\n  }\n\n  if (action.type === UPDATE_ALL_AS_ARCHIVE) {\n    return state.map(note => {\n      return { ...note, isArchived: true };\n    });\n  }\n\n  if (action.type === UPDATE_ALL_AS_UNARCHIVE) {\n    return state.map(note => {\n      return { ...note, isArchived: false };\n    });\n  }\n\n  return state;\n};\n","import { UPDATE_NOTE_TITLE_FILTER } from '../constants/ActionTypes';\n\nexport default (state = { noteTitleFilter: '' }, action) => {\n  if (action.type === UPDATE_NOTE_TITLE_FILTER) {\n    return { ...state, noteTitleFilter: action.text };\n  }\n\n  return state;\n};\n","const notes = [];\nconst filter = {\n  noteTitleFilter: ''\n};\n\nexport default {\n  notes,\n  filter\n};\n","import { compose, applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\nimport initialState from './initialState';\n\nimport { getAllNotes } from '../actions/noteAction';\n\nconst middlewares = [thunk];\nconst enhancers = [];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeEnhancers(applyMiddleware(...middlewares), ...enhancers)\n);\n\nstore.dispatch(getAllNotes());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}